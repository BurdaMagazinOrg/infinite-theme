{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
<article {{ attributes.addClass('region-full-content item-content item-content--article') }} data-view-type="articleView">
  <div class="item-content__header">
    {% block content_header %}
      <h1 class="title--article">{{ label }}</h1>
    {% endblock %}
  </div>
  {% if block('content_highlighted_below_header') is not empty %}
    <div class="item-content-highlighted-below-header container-fixed-content">
      {% block content_highlighted_below_header %}
      {% endblock %}
    </div>
  {% endif %}
  <div class="item-content-column region-fixed-content">
    <aside class="socials socials-bar socials-vertical-bar" data-view-type="stickyView">
      {% block socials_vertical_bar %}
        {% embed '@infinite/embeds/social_icons.html.twig' with {'facebook_share_button': '', 'whatsapp_share_button': '', 'pinterest_share_button': '', 'twitter_share_button': '', 'email_share_button': ''}  %}
        {% endembed %}
      {% endblock %}
    </aside>
    {% if block('content_highlighted') is not empty %}
      <div class="item-content-highlighted">
        {% block content_highlighted %}{% endblock %}
      </div>
    {% endif %}
    <div class="container-row">
      <div class="container-row-body item-content-body">
        {% block content_body %}
          {{ content }}
        {% endblock %}
        <div class="socials socials-bar socials-horizontal-bar item-block">
          {% block socials_horizontal_bar %}
            {% embed '@infinite/embeds/social_icons.html.twig' %}
            {% endembed %}
          {% endblock %}
        </div>
      </div>
      <div class="container-row-sidebar item-content-sidebar">
        {% if block('content_sidebar') is not empty %}
          <div class="item-sticky" data-view-type="stickyView">
            {% block content_sidebar %}
              {% if content.field_sidebar_blocks %}
                {{ content.field_sidebar_blocks }}
              {% endif %}
            {% endblock %}
          </div>
        {% endif %}
      </div>
    </div>
  </div>
</article>
