{#
/**
 * @file
 * Default theme implementation to display a node.
 *
 * Available variables:
 * - node: Full node entity.
 *   - id: The node ID.
 *   - bundle: The type of the node, for example, "page" or "article".
 *   - authorid: The user ID of the node author.
 *   - createdtime: Time the node was published formatted in Unix timestamp.
 *   - changedtime: Time the node was changed formatted in Unix timestamp.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 *
 * @todo Remove the id attribute (or make it a class), because if that gets
 *   rendered twice on a page this is invalid CSS for example: two lists
 *   in different view modes.
 *
 * @ingroup themeable
 */
#}
{# Add wrapper classes #}
{% set wrapper_classes = [
    'region-full-content',
    'region-infinite-block',
    'newsletter',
    'no-v-padding',
] %}

{% set attributes = attributes.setAttribute('data-nid', nid) %}
{% set attributes = attributes.setAttribute('data-uuid', uuid) %}
{% set attributes = attributes.setAttribute('data-tr-container-type', 'newsletter') %}

{% block newsletter_attriutes_block %}
    {% set attributes = attributes.setAttribute('data-client-id', content.field_nl_client_id | render | raw | trim) %}
    {% set attributes = attributes.setAttribute('data-group-id', content.field_nl_group_id | render | raw | trim) %}
    {% set attributes = attributes.setAttribute('data-use-optin', content.field_display_optin.0['#markup'] | render) %}
{% endblock %}

{# Add data attribute data-no-track only for view mode full #}
{% if view_mode == 'full' %}
    {% set attributes = attributes.setAttribute('data-no-track', 'true') %}
{% endif %}

{{ attach_library('infinite/newsletter') }}

<div{{ attributes.addClass(wrapper_classes) }}>
    <section class="newsletter__section newsletter__section--start">
        <div class="newsletter__section-content">
            {% if content.field_logo | render is not empty %}
                <div class="newsletter__logo">
                    {{content.field_logo | render}}
                </div>
            {% endif %}

            {% if content.field_background_media | render is not empty %}
                <div class="newsletter__image">
                    {{content.field_background_media}}
                </div>
            {% endif %}

            {% block newsletter_title_block %}
                {% if content.field_text | render is not empty %}
                    <div class="newsletter__title">
                        {{content.field_text}}
                    </div>
                {% endif %}
            {% endblock %}


            <form>
                {% block newsletter_groups_block %}{% endblock %}
                <div class="newsletter__input-wrapper">
                {% block newsletter_inputfield_block %}
                    <input class="newsletter__input input-lg input-email" type="email" name="email"
                        required placeholder="Deine E-Mail-Adresse">
                {% endblock %}
                <button type="submit" class="newsletter__button">Ok</button>
                </div>
            </form>

            {% block newsletter_optin_block %}
                {% if content.field_display_optin.0['#markup'] | render == '1' %}
                    <div class="newsletter__optin-wrapper">
                        <input id="checkbox--privacy-policy" class="newsletter__checkbox" type="checkbox" name="agreements[]" value="datenschutzeinwilligung" />
                        <label class="newsletter__optin-text" for="checkbox--privacy-policy">
                        </label>
                    </div>
                {% endif %}
            {% endblock %}
            <div class="newsletter__alerts"></div>
        </div>
    </section>
    <section class="newsletter__section newsletter__section--success hide--opacity">
        <div class="newsletter__section-content">
            {% block newsletter_success_text_block %}
                <div class="newsletter__success-title">Danke f체r deine Anmeldung f체r unseren Newsletter</div>
                <p class="newsletter__success-text">Wir schicken dir in K체rze eine Best채tigungs-E-Mail zu. Bitte klicke auf den Aktivierungslink in dieser Mail, dann liefern wir dir alles rund um Fashion, Beauty und Lifestyle direkt ins Postfach.<br />Keine Mail von uns bekommen? Bitte sieh in deinem Spam-Ordner nach.</p>
            {% endblock %}
        </div>
    </section>
    <section class="newsletter__section newsletter__section--terms hide--opacity">
        <div class="newsletter__section-content">
            <span class="newsletter__close"></span>
            <p class="newsletter__optin-body"></p>
        </div>
    </section>
</div>
