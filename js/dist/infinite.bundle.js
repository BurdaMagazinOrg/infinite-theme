/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/backbone-manager.js":
/*!*********************************!*\
  !*** ./src/backbone-manager.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// Define View Manager to manage view states\nwindow.BM = window.BM || {}; // BM.views hold all references to existing views\n\nBM.views = BM.views || {};\nBM.models = BM.models || {}; // Close existing view\n\nBM.closeView = function (name) {\n  if (typeof BM.views[name] !== 'undefined') {\n    // Cleanup view\n    // Remove all of the view's delegated events\n    BM.views[name].undelegateEvents(); // Remove view from the DOM\n\n    BM.views[name].remove(); // Removes all callbacks on view\n\n    BM.views[name].off();\n\n    if (typeof BM.views[name].close === 'function') {\n      BM.views[name].close();\n    }\n  }\n}; // BM.createView always cleans up existing view before\n// creating a new one.\n// callback function always return a new view instance\n\n\nBM.createView = function (name, pComponent) {\n  BM.closeView(name);\n  BM.views[name] = pComponent;\n  return BM.views[name];\n}; // BM.reuseView always returns existing view. Otherwise it\n// execute callback function to return new view\n// callback function always return a new view instance\n\n\nBM.reuseView = function (name, pComponent) {\n  if (typeof BM.views[name] !== 'undefined') {\n    return BM.views[name];\n  }\n\n  BM.views[name] = pComponent;\n  return BM.views[name];\n};\n/**\n * MODELS\n */\n\n\nBM.clearModel = function (name) {\n  if (typeof BM.models[name] !== 'undefined') {\n    // Cleanup model\n    BM.models[name].clear();\n\n    if (typeof BM.views[name].destroy === 'function') {\n      BM.views[name].destroy();\n    }\n  }\n};\n/**\n * Create Model\n * @param name\n * @param pModel\n * @returns {BackboneModel}\n */\n\n\nBM.createModel = function (name, pModel) {\n  BM.clearModel(name);\n  BM.models[name] = pModel;\n  return BM.models[name];\n};\n/**\n * ReuseModel\n * @param name\n * @param pModel\n * @returns {BackboneModel}\n */\n\n\nBM.reuseModel = function (name, pModel) {\n  if (typeof BM.models[name] !== 'undefined') {\n    return BM.models[name];\n  }\n\n  BM.models[name] = pModel;\n  return BM.models[name];\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BM);\n\n//# sourceURL=webpack:///./src/backbone-manager.js?");

/***/ }),

/***/ "./src/burda-infinite.js":
/*!*******************************!*\
  !*** ./src/burda-infinite.js ***!
  \*******************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _views_main_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./views/main-view */ \"./src/views/main-view.js\");\n/* harmony import */ var _consts_view_ids__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./consts/view-ids */ \"./src/consts/view-ids.js\");\n\n\nwindow.BurdaInfinite = {\n  views: {\n    base: {},\n    products: {},\n    newsletter: {}\n  },\n  utils: {},\n  managers: {},\n  models: {\n    base: {}\n  }\n};\njQuery(() => {\n  jQuery('body').once(_consts_view_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainView).each(() => {\n    var mainView = new _views_main_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"]({\n      el: jQuery(document),\n      id: _consts_view_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainView\n    });\n    BM.reuseView(_consts_view_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].mainView, mainView);\n    initBlazyOnContainer('#modal-search');\n  });\n});\n\nfunction initBlazyOnContainer(containerSelector) {\n  if (null === document.querySelector(containerSelector)) {\n    return;\n  }\n\n  new Blazy({\n    container: containerSelector,\n    success: function (element) {\n      jQuery(element).parents('.media--loading').removeClass('media--loading');\n    }\n  });\n}\n\n;\nwindow.addEventListener('acquiaLiftDecision', e => {\n  console.log(\"%cacquiaLift | decision\", \"color: blue; font-weight: bold;\", e.detail.decision_slot_id);\n  jQuery(document).trigger('base-utils:update-links', [jQuery('[data-lift-slot=\"' + e.detail.decision_slot_id + '\"]').find('.promotion')]);\n});\n\n//# sourceURL=webpack:///./src/burda-infinite.js?");

/***/ }),

/***/ "./src/consts/breakpoints.js":
/*!***********************************!*\
  !*** ./src/consts/breakpoints.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/**\n * remove this class - use deviceModel\n */\nvar Breakpoints = {\n  xxs_min: 320,\n  xxs_max: 479,\n  xs_min: 480,\n  xs_max: 766,\n  sm_min: 767,\n  sm_max: 991,\n  md_min: 992,\n  md_max: 1127,\n  lg_min: 1128,\n  lg_max: 1449,\n  xl_min: 1450,\n  xl_max: 1799,\n  xxl_min: 1800\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (Breakpoints);\n\n//# sourceURL=webpack:///./src/consts/breakpoints.js?");

/***/ }),

/***/ "./src/consts/manager-ids.js":
/*!***********************************!*\
  !*** ./src/consts/manager-ids.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar ManagerIds = {\n  trackingManager: \"trackingManager\",\n  scrollManager: \"scrollManager\"\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ManagerIds);\n\n//# sourceURL=webpack:///./src/consts/manager-ids.js?");

/***/ }),

/***/ "./src/consts/model-ids.js":
/*!*********************************!*\
  !*** ./src/consts/model-ids.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar ModelIds = {\n  menuSidebarModel: \"menuSidebarModel\",\n  infiniteViewsModel: \"infiniteViewsModel\",\n  modalSearchModel: \"modalSearchModel\",\n  deviceModel: \"deviceModel\",\n  pageOffsetsModel: \"pageOffsetsModel\"\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ModelIds);\n\n//# sourceURL=webpack:///./src/consts/model-ids.js?");

/***/ }),

/***/ "./src/consts/view-ids.js":
/*!********************************!*\
  !*** ./src/consts/view-ids.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar ViewIds = {\n  mainView: \"mainView\",\n  menuMainView: \"menuMainView\",\n  menuSidebarView: \"menuSidebarView\",\n  dynamicView: \"dynamicView\",\n  modalSearchView: \"modalSearchView\",\n  infiniteView: \"infiniteView\"\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (ViewIds);\n\n//# sourceURL=webpack:///./src/consts/view-ids.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _burda_infinite__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./burda-infinite */ \"./src/burda-infinite.js\");\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/managers/marketing-manager.js":
/*!*******************************************!*\
  !*** ./src/managers/marketing-manager.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consts_model_ids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts/model-ids */ \"./src/consts/model-ids.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.managers.MarketingManager = Backbone.View.extend({\n    infiniteViewsModel: {},\n    deviceModel: {},\n    adsObject: {},\n    breakpointDeviceModel: {},\n    currentBreakpoint: {},\n    lastScrollTopPos: -1,\n    lastEnabledState: [],\n    firstRun: true,\n    initialize: function (pOptions) {\n      _.extend(this, pOptions);\n\n      if (_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"] != undefined && BM != undefined) {\n        this.deviceModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deviceModel);\n        this.breakpointDeviceModel = this.deviceModel.getDeviceBreakpoints().findWhere({\n          active: true\n        });\n        this.currentBreakpoint = this.breakpointDeviceModel.id;\n        this.listenTo(this.deviceModel.getDeviceBreakpoints(), 'change:active', this.onDeviceBreakpointHandler, this);\n        this.listenTo(this.infiniteViewsModel, 'change:inview', this.inviewChangeHandler, this);\n        $(window).on('atf:BeforeLoad', _.bind(this.onAtfBeforeLoadHandler, this));\n      }\n    },\n    updateView: function ($pContext) {\n      var tmpView,\n          $tmpElement,\n          tmpArgument,\n          tmpLoadArguments = [],\n          tmpTargeting = {},\n          tmpIndex = 0,\n          $tmpAllAds = $('.marketing-view'),\n          $tmpContext = $pContext || document;\n      this.currentBreakpoint = this.breakpointDeviceModel.id;\n      $('.marketing-view', $tmpContext).each(_.bind(function (pIndex, pItem) {\n        $tmpElement = $(pItem);\n\n        if ($tmpElement.data('infiniteModel') != undefined) {\n          tmpView = $tmpElement.data('infiniteModel').get('view'); //&& tmpView.isTypeAllowedToWrite()\n\n          if (tmpView.isActive() && tmpView.isAllowedToWrite()) {\n            tmpIndex = $tmpAllAds.index($tmpElement);\n            tmpView.getAdTechAd().attr('data-slot-number', tmpIndex);\n            tmpTargeting = tmpView.getTargeting();\n            tmpTargeting.slotNumber = tmpIndex;\n            tmpTargeting.breakpoint = this.currentBreakpoint;\n            tmpTargeting.$el = $tmpElement;\n            tmpTargeting.adContainerType = tmpView.getAdContainerType();\n            tmpArgument = {\n              element: tmpView.getAdTechAd()[0],\n              targeting: tmpTargeting\n            };\n            tmpLoadArguments.push(tmpArgument);\n          }\n        }\n      }, this));\n\n      if (tmpLoadArguments.length > 0) {\n        this.writeMarketing(tmpLoadArguments);\n      }\n    },\n    writeMarketing: function (pLoadArguments) {\n      if (typeof atf_lib !== 'undefined') {\n        window.atf_lib.load_tag(pLoadArguments);\n        console.log(\"%c marketing | write \", 'background-color: black; color: yellow; font-weight: bold;', pLoadArguments, \"window.atf_lib\", typeof window.atf_lib);\n      } else {\n        console.log(\">>> atf_lib is not defined > try again\");\n\n        _.delay(_.bind(this.writeMarketing, this), 100, pLoadArguments);\n      }\n    },\n    inviewChangeHandler: function (pModel) {\n      if (this.lastEnabledState == pModel.get('inview').state) return; //|| this.lastScrollTopPos == $(window).scrollTop()\n\n      var $tmpElement = pModel.get('el'),\n          tmpInviewModel = pModel.get('inview');\n\n      if (tmpInviewModel.state == 'enter') {\n        _.delay(_.bind(function () {\n          this.updateView($tmpElement);\n        }, this), 1); // console.log(\"MarketingManager INVIEW CHANGED\", tmpInviewModel.state);\n\n      }\n\n      this.lastEnabledState = pModel.get('inview').state;\n      this.lastScrollTopPos = $(window).scrollTop();\n    },\n    onDeviceBreakpointHandler: function (pModel) {\n      this.breakpointDeviceModel = pModel;\n\n      _.delay(_.bind(function () {\n        this.updateView();\n      }, this), 1);\n    },\n    onAtfBeforeLoadHandler: function (pEvent, pElements) {\n      this.beforeAtfLoad(pElements);\n    }\n  });\n  window.MarketingManager = window.MarketingManager || BurdaInfinite.managers.MarketingManager;\n  window.addEventListener('atf_no_ad_rendered', function (event) {\n    var $tmpAdContainer = jQuery('#' + event.element_id).closest('.marketing-view'),\n        tmpModel = {\n      visibility: 'hidden',\n      event: event\n    },\n        tmpView;\n\n    if ($tmpAdContainer.data('infiniteModel') != undefined) {\n      tmpView = $tmpAdContainer.data('infiniteModel').get('view');\n      tmpView.setRenderModel(tmpModel);\n      console.log('No ad rendered for ' + event.element_id, tmpView.adRenderModel.visibility, tmpView.$el);\n    }\n  }, false);\n  window.addEventListener('atf_ad_rendered', function (event) {\n    var $tmpAdContainer = jQuery('#' + event.element_id).closest('.marketing-view'),\n        tmpModel = {\n      visibility: 'visible',\n      event: event\n    },\n        tmpView;\n    console.log('Ad rendered for ' + event.element_id);\n\n    if ($tmpAdContainer.data('infiniteModel') != undefined) {\n      tmpView = $tmpAdContainer.data('infiniteModel').get('view');\n      tmpView.setRenderModel(tmpModel);\n    }\n  }, false);\n\n  window.atf_ad = function (pElement, pType) {\n    var $tmpAdContainer = $(pElement).closest('.marketing-view'),\n        tmpView;\n\n    if ($tmpAdContainer.data('infiniteModel') != undefined) {\n      tmpView = $tmpAdContainer.data('infiniteModel').get('view');\n      tmpView.setRenderedAdType(pType, pElement);\n    }\n\n    console.log(\"atf_fba\", $tmpAdContainer, pType);\n  };\n\n  window.MarketingManager = window.MarketingManager || BurdaInfinite.managers.MarketingManager;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MarketingManager);\n\n//# sourceURL=webpack:///./src/managers/marketing-manager.js?");

/***/ }),

/***/ "./src/managers/scroll-manager.js":
/*!****************************************!*\
  !*** ./src/managers/scroll-manager.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.managers.ScrollManager = Backbone.View.extend({\n    infiniteViewsModel: {},\n    scrollTopAdSettings: 0,\n    scrollTop: 0,\n    initialize: function (pOptions) {\n      _.extend(this, pOptions);\n\n      if (!Backbone.History.started && _.isFunction(history.pushState)) Backbone.history.start({\n        pushState: true\n      });\n      this.scrollTopAdSettings = $(window).scrollTop();\n      this.scrollTop = $(window).scrollTop();\n      this.listenTo(this.infiniteViewsModel, 'change:inview', this.onInviewChangeHandler, this);\n    },\n    onInviewChangeHandler: function (pModel) {\n      if (pModel.get('type') != 'infiniteBlockView') return;\n      this.urlChangeHandler(pModel);\n    },\n    urlChangeHandler: function (pModel) {\n      if (this.scrollTop == $(window).scrollTop() || !pModel.get('el').data('history-url')) return;\n      var $tmpElement = pModel.get('el'),\n          tmpInviewModel = pModel.get('inview'),\n          tmpHistoryURL = $tmpElement.data('history-url'),\n          tmpDocumentTitle = '';\n\n      if (tmpInviewModel.state == 'enter' || tmpInviewModel.state == 'exit') {\n        if (!_.isUndefined(tmpHistoryURL) && !_.isEmpty(tmpHistoryURL)) {\n          ScrollManager.pushHistory(tmpHistoryURL, {\n            replace: true\n          });\n          tmpDocumentTitle = $tmpElement.data('history-title');\n\n          if (!_.isUndefined(tmpDocumentTitle) && !_.isEmpty(tmpDocumentTitle)) {\n            document.title = decodeURIComponent(tmpDocumentTitle);\n          }\n        }\n      }\n\n      this.scrollTop = $(window).scrollTop();\n    }\n  }, {\n    pushHistory: function (pURL, pSettings) {\n      //console.log(\">>> pushHistory\", pURL);\n      var pushStateSupported = _.isFunction(history.pushState);\n\n      if (pushStateSupported) {\n        Backbone.history.navigate(pURL, pSettings);\n      }\n    }\n  });\n  window.ScrollManager = window.ScrollManager || BurdaInfinite.managers.ScrollManager;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScrollManager);\n\n//# sourceURL=webpack:///./src/managers/scroll-manager.js?");

/***/ }),

/***/ "./src/managers/tracking-manager.js":
/*!******************************************!*\
  !*** ./src/managers/tracking-manager.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.managers.TrackingManager = Backbone.View.extend({\n    infiniteViewsModel: {},\n    initialLocation: \"\",\n    gtmEventName: \"\",\n    gtmIndexEvent: \"\",\n    gtmIndexPosEvent: \"\",\n    activeInfiniteBlockModel: null,\n    lastViewState: \"\",\n    initialize: function (pOptions) {\n      _.extend(this, pOptions);\n\n      if (!this.model.has('initialLocation') || !this.model.has('gtmEventName') || !this.model.has('gtmIndexEvent') || !this.model.has('gtmIndexPosEvent')) {\n        throw new Error(\"TrackingManager Model Error > initialLocation | gtmEventName | gtmIndexEvent | gtmIndexPosEvent > needed\");\n      }\n\n      this.initialLocation = this.model.get('initialLocation');\n      this.gtmEventName = TrackingManager.gtmEventName = this.model.get('gtmEventName');\n      this.gtmIndexEvent = this.model.get('gtmIndexEvent');\n      this.gtmIndexPosEvent = this.model.get('gtmIndexPosEvent');\n      this.listenTo(this.infiniteViewsModel, 'change:inview', this.inviewChangeHandler, this);\n      this.initBaseElements();\n      this.parseTrackingElements(this.$el); //parse on lazyloading\n\n      this.listenTo(this.infiniteViewsModel, 'change:infiniteBlock', function (pModel) {\n        if (pModel.get('type') === 'infiniteBlockView' && pModel.get('initialDOMItem') === false) {\n          this.parseTrackingElements(pModel.get('el'));\n        }\n      }, this);\n\n      if (typeof blockAdBlock === 'undefined') {\n        this.onAdBlockDetected();\n      } else {\n        window.blockAdBlock.on(true, _.bind(this.onAdBlockDetected, this)).onNotDetected(_.bind(this.onAdBlockNotDetected, this));\n      }\n\n      this.listenTo(this.infiniteViewsModel, 'refresh', function (pModel) {\n        if (pModel.get('type') === 'infiniteBlockView') {\n          this.parseTrackingElements(pModel.get('el'));\n        }\n      }, this);\n    },\n    onAdBlockDetected: function () {\n      TrackingManager.trackEvent({\n        category: 'marketingBlocker',\n        action: 'active',\n        eventNonInteraction: true\n      });\n    },\n    onAdBlockNotDetected: function () {\n      TrackingManager.trackEvent({\n        category: 'marketingBlocker',\n        action: 'inactive',\n        eventNonInteraction: true\n      });\n    },\n    inviewChangeHandler: function (pModel) {\n      /**\n       * use only infiniteBlockView for tracking and complex inview logic\n       */\n      if (this.lastViewState == pModel.get('inview').state || pModel.get('type') != 'infiniteBlockView') return;\n      var $tmpElement = pModel.get('el'),\n          tmpInviewModel = pModel.get('inview'),\n          tmpHistoryURL = $tmpElement.data('history-url'),\n          tmpTrackingObject = {},\n          tmpIndex = 0;\n\n      if (tmpInviewModel.state == 'enter' || tmpInviewModel.state == 'exit') {\n        //set current infiniteViewsModel\n        TrackingManager.activeInfiniteBlockModel = pModel;\n      }\n\n      if (tmpInviewModel.state == 'enter' && $tmpElement.data('no-track') != true) {\n        /**\n         * track pageView\n         */\n        if (!_.isUndefined(tmpHistoryURL) && pModel.get('scrollDepthTracked') != true && pModel.get('initialDOMItem') != true) {\n          TrackingManager.trackPageView(tmpHistoryURL, TrackingManager.getAdvTrackingByElement($tmpElement));\n        }\n\n        if (pModel.get('scrollDepthTracked') != true) {\n          tmpIndex = ($('.region-infinite-block').not('.region-infinite-block[data-no-track=\"true\"]').index($tmpElement) + 1).toString();\n          tmpTrackingObject.event = tmpTrackingObject.category = 'scroll_depth';\n          tmpTrackingObject.depth = 'index_' + tmpIndex;\n          tmpTrackingObject.location = TrackingManager.getLocationType(this.initialLocation);\n          tmpTrackingObject.eventNonInteraction = false;\n          TrackingManager.trackEvent(tmpTrackingObject, TrackingManager.getAdvTrackingByElement($tmpElement));\n          pModel.set('scrollDepthTracked', true);\n        }\n      }\n\n      this.lastViewState = tmpInviewModel.state;\n    },\n    initBaseElements: function () {\n      $('#menu-open-btn', this.$el).click(function () {\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'menu_sidebar',\n          label: 'open',\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n      $('#menu-sidebar .icon-close', this.$el).click(function () {\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'menu_sidebar',\n          label: 'close',\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n      $('#menu-sidebar .menu-item a', this.$el).click(function (pEvent) {\n        var $tmpItem = $(pEvent.currentTarget),\n            tmpText = $tmpItem.text();\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'menu_sidebar',\n          label: tmpText,\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n      $('#menu-sidebar .logo', this.$el).click(function (pEvent) {\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'menu_sidebar',\n          label: 'logo',\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n      $('#menu-main-navigation .logo', this.$el).click(function (pEvent) {\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'main_navigation',\n          label: 'logo',\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n      $('#header-home .logo', this.$el).click(function (pEvent) {\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'header_home',\n          label: 'logo',\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n      $('#menu-main-navigation .menu-item a', this.$el).click(function (pEvent) {\n        var $tmpItem = $(pEvent.currentTarget),\n            tmpText = $tmpItem.text();\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'main_navigation',\n          label: tmpText,\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n      $('#menu-submenu-navigation .menu-item a', this.$el).click(function (pEvent) {\n        var $tmpItem = $(pEvent.currentTarget),\n            tmpText = $tmpItem.text();\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'sub_navigation',\n          label: tmpText,\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement($(this)));\n      });\n    },\n    parseTrackingElements: function ($pContainer) {\n      var tmpSelector = '',\n          $tmpItems = [];\n      /**\n       * Outbrain\n       */\n\n      $tmpItems = $pContainer.find('.outbrain_div_container');\n      $tmpItems.on('click', '.ob-dynamic-rec-link', $.proxy(function (pEvent) {\n        var $tmpElement = $(pEvent.currentTarget),\n            tmpIndex = $tmpElement.parent().index() + 1,\n            tmpMagazineName = $tmpElement.find('.ob-rec-source').text(),\n            tmpTrackingObject = {\n          event: this.gtmEventName,\n          category: 'mkt-userInteraction',\n          action: 'outbrainClick',\n          label: tmpMagazineName,\n          index: 'index_' + tmpIndex,\n          eventNonInteraction: false\n        };\n        TrackingManager.trackEvent(tmpTrackingObject, TrackingManager.getAdvTrackingByElement($tmpElement));\n      }, this));\n      /**\n       * Presenter Full\n       */\n\n      tmpSelector = '.teaser-presenter--full .teaser__img-container, .teaser-presenter--full .teaser__title';\n      $tmpItems = $pContainer.find(tmpSelector);\n      if ($tmpItems.length > 0) $tmpItems.unbind('click', this.onPresenterFullClickHandler).bind('click', $.proxy(this.onPresenterFullClickHandler, this));\n      /**\n       * Presenter Half\n       */\n\n      tmpSelector = '.teaser-presenter--lg .teaser__img-container, .teaser-presenter--lg .teaser__title';\n      $tmpItems = $pContainer.find(tmpSelector).addBack().filter(tmpSelector);\n      if ($tmpItems.length > 0) $tmpItems.unbind('click', this.onPresenterHalfClickHandler).bind('click', $.proxy(this.onPresenterHalfClickHandler, this));\n      /**\n       * Socials\n       */\n\n      $tmpItems = $pContainer.find('.item-social');\n      if ($tmpItems.length > 0) $tmpItems.unbind('click', this.onSocialsClickHandler).bind('click', $.proxy(this.onSocialsClickHandler, this));\n      /**\n       * Authors\n       */\n\n      $tmpItems = $pContainer.find('.author[data-internal-url]');\n      if ($tmpItems.length > 0) $tmpItems.unbind('click', this.onAuthorClickHandler).bind('click', $.proxy(this.onAuthorClickHandler, this));\n      /**\n       * Horizontal Teaser Block\n       */\n\n      tmpSelector = '.region-teaser-list-horizontal .teaser';\n      $tmpItems = $pContainer.find(tmpSelector).addBack().filter(tmpSelector);\n      if ($tmpItems.length > 0) $tmpItems.unbind('click', this.onTeaserHorizontalClickHandler).bind('click', $.proxy(this.onTeaserHorizontalClickHandler, this));\n      /**\n       * Feed Teaser\n       */\n\n      tmpSelector = '.region-teaser-list .img-container, .region-teaser-list .text-headline';\n      $tmpItems = $pContainer.find(tmpSelector).addBack().filter(tmpSelector);\n      if ($tmpItems.length > 0) $tmpItems.unbind('click', this.onFeedTeaserClickHandler).bind('click', $.proxy(this.onFeedTeaserClickHandler, this));\n      /**\n       * Teaser Category Link\n       */\n\n      tmpSelector = '.teaser__overhead [data-internal-url]';\n      $tmpItems = $pContainer.find(tmpSelector);\n      if ($tmpItems.length > 0) $tmpItems.unbind('click', this.onTeaserCategoryClickHandler).bind('click', $.proxy(this.onTeaserCategoryClickHandler, this));\n    },\n    onFeedTeaserClickHandler: function (pEvent) {\n      var $tmpItem = $(pEvent.currentTarget).closest('.teaser'),\n          tmpIndex,\n          tmpTrackingObject,\n          $tmpTeaserParent;\n\n      if ($tmpItem.closest('#content').length > 0) {\n        $tmpTeaserParent = $tmpItem.closest('#content').find('> .region-infinite-block');\n      } else if ($tmpItem.closest('#feed-modal-search').length > 0) {\n        $tmpTeaserParent = $tmpItem.closest('#feed-modal-search');\n      } else {\n        return;\n      }\n\n      tmpIndex = $tmpTeaserParent.find('.teaser[data-nid]').index($tmpItem) + 1;\n      tmpTrackingObject = {\n        event: this.gtmIndexEvent,\n        category: 'teaser',\n        action: 'feed_teaser',\n        index: 'index_' + tmpIndex,\n        eventNonInteraction: false\n      };\n      TrackingManager.trackEvent(tmpTrackingObject);\n    },\n    onTeaserCategoryClickHandler: function (pEvent) {\n      var $tmpItem = $(pEvent.currentTarget),\n          tmpText = $tmpItem.text();\n      TrackingManager.trackEvent({\n        category: 'click',\n        action: 'teaser_category',\n        label: tmpText,\n        location: TrackingManager.getLocationType(),\n        eventNonInteraction: false\n      });\n    },\n    onPresenterFullClickHandler: function (pEvent) {\n      var $tmpItem = $(pEvent.currentTarget),\n          tmpIndex = $('.region-presenter').index($tmpItem) + 1,\n          tmpTrackingObject = {\n        event: this.gtmIndexEvent,\n        category: 'teaser',\n        action: 'presenter_full',\n        index: 'index_' + tmpIndex,\n        eventNonInteraction: false\n      };\n      TrackingManager.trackEvent(tmpTrackingObject, TrackingManager.getAdvTrackingByElement($tmpItem));\n    },\n    onPresenterHalfClickHandler: function (pEvent) {\n      var $tmpItem = $(pEvent.currentTarget).parent('.teaser-landscape-medium'),\n          tmpIndex = $('.region-presenter .teaser-landscape-medium').index($tmpItem) + 1,\n          tmpTrackingObject = {\n        event: this.gtmIndexEvent,\n        category: 'teaser',\n        action: 'presenter_half',\n        index: 'index_' + tmpIndex,\n        eventNonInteraction: false\n      };\n      TrackingManager.trackEvent(tmpTrackingObject, TrackingManager.getAdvTrackingByElement($tmpItem));\n    },\n    onTeaserHorizontalClickHandler: function (pEvent) {\n      var $tmpItem = $(pEvent.currentTarget),\n          tmpIndex = $('.region-teaser-list-horizontal').index($tmpItem.parents('.region-teaser-list-horizontal')) + 1,\n          tmpItemIndex = $tmpItem.index() + 1,\n          tmpTrackingObject = {\n        event: this.gtmIndexPosEvent,\n        category: 'teaser',\n        action: 'presenter_multi',\n        index: 'index_' + tmpIndex,\n        pos: 'pos_' + tmpItemIndex,\n        eventNonInteraction: false\n      };\n      TrackingManager.trackEvent(tmpTrackingObject, TrackingManager.getAdvTrackingByElement($tmpItem));\n    },\n    onSocialsClickHandler: function (pEvent) {\n      var $tmpItem = $(pEvent.currentTarget),\n          tmpTrackingObject = {\n        category: 'social_media_buttons'\n      },\n          tmpAction = TrackingManager.getItemType($tmpItem);\n      tmpTrackingObject.action = tmpAction;\n      tmpTrackingObject.label = $tmpItem.find('[data-social-type]').addBack().filter('[data-social-type]').data('social-type');\n      tmpTrackingObject.eventNonInteraction = false;\n      TrackingManager.trackEvent(tmpTrackingObject, TrackingManager.getAdvTrackingByElement($tmpItem));\n    },\n    onAuthorClickHandler: function (pEvent) {\n      var $tmpItem = $(pEvent.currentTarget),\n          tmpTrackingObject = {\n        category: 'author'\n      };\n      tmpTrackingObject.action = $tmpItem.find('.text-author span').text();\n      tmpTrackingObject.label = TrackingManager.getItemType($tmpItem);\n      tmpTrackingObject.eventNonInteraction = false;\n      TrackingManager.trackEvent(tmpTrackingObject, TrackingManager.getAdvTrackingByElement($tmpItem));\n    }\n  }, {\n    trackEvent: function (pTrackingObject, pAdvObject) {\n      var tmpTrackingObject = pTrackingObject,\n          tmpAdvObject = pAdvObject || TrackingManager.getAdvTrackingByElement(),\n          tmpCurrentPath = TrackingManager.getCurrentPath();\n      tmpTrackingObject = _.extend({\n        'event': TrackingManager.gtmEventName,\n        'location': tmpCurrentPath,\n        'label': '',\n        'value': '',\n        'eventNonInteraction': ''\n      }, tmpTrackingObject, tmpAdvObject);\n\n      if (typeof window.dataLayer != \"undefined\") {\n        if (typeof OdoscopeManager != \"undefined\" && OdoscopeManager.getInstance().getTrackingObject() != null) {\n          tmpTrackingObject.odoscopelist = OdoscopeManager.getInstance().getTrackingObject();\n        }\n\n        window.dataLayer.push(tmpTrackingObject);\n        console.log(\">> trackEvent >>\", tmpTrackingObject);\n      } else {\n        console.log(\"No Google Tag Manager available\");\n      }\n    },\n    trackPageView: function (pPath, pAdvObject) {\n      var tmpPath = pPath.replace(/([^:]\\/)\\/+/g, \"$1\"),\n          tmpAdvObject = pAdvObject || TrackingManager.getAdvTrackingByElement(),\n          tmpTrackingObject = _.extend({\n        event: 'page_view',\n        'location': tmpPath\n      }, tmpAdvObject);\n\n      if (typeof window.dataLayer != \"undefined\") {\n        if (typeof OdoscopeManager != \"undefined\" && OdoscopeManager.getInstance().getTrackingObject() != null) {\n          tmpTrackingObject.odoscopelist = OdoscopeManager.getInstance().getTrackingObject();\n        } // tmpTrackingObject = _.extend(tmpTrackingObject, pAdvObject);\n\n\n        window.dataLayer.push(tmpTrackingObject);\n        console.log(\">> trackPageView >>\", document.title, tmpPath);\n      } else {\n        console.log(\"No Google Tag Manager available\");\n      }\n    },\n    trackIVW: function (iamDataObject) {\n      if (window.iam_data == undefined) return;\n      iamDataObject = iamDataObject || window.iam_data;\n      iom.c(iamDataObject, 1);\n    },\n    trackEcommerce: function (pData, pType, pAdvObject) {\n      var tmpTrackingObject = {};\n\n      switch (pType) {\n        case 'impressions':\n          tmpTrackingObject.event = 'productImpressions';\n          tmpTrackingObject.ecommerce = {\n            'impressions': [pData]\n          };\n          break;\n\n        case 'productClick':\n          tmpTrackingObject.event = 'productClick';\n          tmpTrackingObject.ecommerce = {\n            'click': {\n              'actionField': {\n                'list': pData.list\n              },\n              'products': [pData]\n            }\n          };\n          break;\n\n        default:\n          return;\n      }\n\n      if (typeof window.dataLayer != \"undefined\") {\n        if (typeof OdoscopeManager != \"undefined\" && OdoscopeManager.getInstance().getTrackingObject() != null) {\n          tmpTrackingObject.odoscopelist = OdoscopeManager.getInstance().getTrackingObject();\n        }\n\n        tmpTrackingObject = _.extend(tmpTrackingObject, pAdvObject);\n        console.log(\">> trackEcommerce >>\", tmpTrackingObject);\n        window.dataLayer.push(tmpTrackingObject);\n      } else {\n        console.log(\"No Google Tag Manager available\");\n      }\n    },\n    getCurrentPath: function () {\n      return Backbone.history.location.pathname;\n    },\n    getItemType: function ($pItem) {\n      var tmpAction = \"\";\n\n      if ($pItem.parents('[data-view-type]').length > 0) {\n        tmpAction = $pItem.parents('[data-view-type]').data('view-type').replace('TeaserView', '').replace('View', '');\n\n        if ($pItem.parents('.region-presenter').length > 0) {\n          tmpAction += '_presenter';\n        } else if ($pItem.parents('.teaser').length > 0) {\n          tmpAction += '_teaser';\n        } else if ($pItem.parents('.item-paragraph--media').length > 0) {\n          tmpAction += '_media';\n        } else if ($pItem.parents('.socials-horizontal-bar').length > 0) {\n          tmpAction += '_horizontal_bar';\n        } else if ($pItem.parents('.socials-vertical-bar').length > 0) {\n          tmpAction += '_vertical_bar';\n        }\n      } else {\n        if ($pItem.parents('#header-home').length > 0) {\n          tmpAction = 'header';\n        } else if ($pItem.parents('#menu-sidebar').length > 0) {\n          tmpAction = 'sidebar';\n        } else if ($pItem.parents('.region-presenter').length > 0) {\n          tmpAction = 'presenter';\n        }\n      }\n\n      return tmpAction;\n    },\n    getAdvTrackingByElement: function ($pElement) {\n      var tmpAdvObject,\n          $tmpUuidElement = [],\n          tmpUuid = '';\n      /**\n       * get advanced drupalSettings.datalayer informations\n       */\n\n      if (drupalSettings.datalayer != undefined) {\n        $tmpUuidElement = $($pElement).closest('[data-uuid]').addBack();\n        tmpUuid = $tmpUuidElement.data('uuid');\n        /** use specific tracking object when parent got an uuid **/\n\n        tmpAdvObject = TrackingManager.getAdvTrackingByUuid(tmpUuid);\n      } else {\n        console.log(\">>> no drupalSettings.datalayer found\");\n      }\n\n      tmpAdvObject = _.extend(tmpAdvObject, {\n        trackingHelper: {\n          $uuidElement: $tmpUuidElement,\n          uuid: tmpUuid\n        }\n      });\n      return tmpAdvObject;\n    },\n    getAdvTrackingByUuid: function (pUuid) {\n      var tmpAdvObject,\n          tmpUuid = pUuid,\n          $tmpUuidElement = [];\n\n      if (drupalSettings.datalayer[tmpUuid]) {\n        tmpAdvObject = drupalSettings.datalayer[tmpUuid];\n      }\n      /** use active infiniteBlockModel when the parent has no uuid (example: menu open / close in infinite-scrolling) **/\n      else if (TrackingManager.activeInfiniteBlockModel != null && TrackingManager.activeInfiniteBlockModel.has('el')) {\n          $tmpUuidElement = TrackingManager.activeInfiniteBlockModel.get('el');\n          tmpUuid = $tmpUuidElement.data('uuid');\n\n          if (drupalSettings.datalayer[tmpUuid]) {\n            tmpAdvObject = drupalSettings.datalayer[tmpUuid];\n          } else {\n            tmpAdvObject = TrackingManager.getAdvTrackingByIndex(0);\n          }\n        }\n        /** use global/initial tracking object **/\n        else {\n            tmpAdvObject = TrackingManager.getAdvTrackingByIndex(0);\n          }\n\n      return tmpAdvObject;\n    },\n    getAdvTrackingByIndex: function (pIndex) {\n      var tmpAdvObject;\n\n      if (typeof drupalSettings.datalayer != 'undefined' && _.values(drupalSettings.datalayer).length >= pIndex) {\n        tmpAdvObject = _.values(drupalSettings.datalayer)[pIndex];\n      }\n\n      return tmpAdvObject;\n    },\n    getLocationType: function (pDefault) {\n      var tmpLocation = pDefault;\n\n      if ($('#modal-search').hasClass('is_search_enabled')) {\n        tmpLocation = '/search_overlay';\n      } else if ($('body').hasClass('page-article')) {\n        tmpLocation = '/article';\n      } else if (_.isUndefined(tmpLocation)) {\n        tmpLocation = TrackingManager.getCurrentPath();\n      }\n\n      return tmpLocation;\n    }\n  });\n  window.TrackingManager = window.TrackingManager || BurdaInfinite.managers.TrackingManager;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TrackingManager);\n\n//# sourceURL=webpack:///./src/managers/tracking-manager.js?");

/***/ }),

/***/ "./src/models/ajax-model.js":
/*!**********************************!*\
  !*** ./src/models/ajax-model.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.AjaxModel = Backbone.Model.extend({\n    defaults: {\n      url: '',\n      base: false,\n      element: null,\n      callback: $.noop,\n      progress: {\n        type: null\n      }\n    },\n    ajax: null,\n    settings: null,\n    initialize: function (pSettings) {\n      this.settings = _.extend(this.defaults, pSettings);\n      this.ajax = Drupal.ajax(this.settings); //caching enabled\n\n      this.ajax.options.type = \"GET\"; //this.ajax.options.type = \"POST\";\n\n      this.ajax.commands._insert = this.ajax.commands._insert || this.ajax.commands.insert;\n      this.ajax.commands.insert = $.proxy(function (ajax, response, status) {\n        if (response.method == null) {\n          var new_content_wrapped = $('<div></div>').html(response.data);\n          var new_content = new_content_wrapped.contents();\n\n          if (new_content.length !== 1 || new_content.get(0).nodeType !== 1) {\n            new_content = new_content_wrapped;\n          }\n\n          this.settings.callback(new_content);\n        } else {\n          this.ajax.commands._insert(ajax, response, status);\n        }\n      }, this); // This command will remove this Ajax object from the page.\n\n      this.ajax.commands.destroyObject = function (ajax, response, status) {\n        Drupal.ajax.instances[this.instanceIndex] = null;\n      };\n    },\n    execute: function () {\n      this.ajax.execute();\n    }\n  });\n  window.AjaxModel = window.AjaxModel || BurdaInfinite.models.AjaxModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AjaxModel);\n\n//# sourceURL=webpack:///./src/models/ajax-model.js?");

/***/ }),

/***/ "./src/models/base/base-collection-model.js":
/*!**************************************************!*\
  !*** ./src/models/base/base-collection-model.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.base.BaseCollectionModel = BaseModel.extend({\n    initialize: function (pAttributes, pOptions) {\n      BaseModel.prototype.initialize.call(this, pAttributes, pOptions);\n      /**\n       * Collection in Collection is not possible >:/\n       * We need the 'items' property here\n       */\n\n      this.set('items', new Backbone.Collection());\n      this.listenTo(this.getItems(), 'all', function (pType, pModel) {\n        this.trigger(pType, pModel);\n      }, this);\n    },\n    add: function (pItems, pOptions) {\n      //check if multi items -> array\n      if (typeof pItems.setParentModel !== 'undefined') {\n        pItems.setParentModel(this);\n      }\n\n      this.getItems().add(pItems, pOptions);\n    },\n    getModel: function (pId) {\n      return this.getItems().get(pId);\n    },\n    getItems: function () {\n      return this.get('items');\n    },\n    hasItems: function () {\n      return this.has('items') && this.getItems().length > 0;\n    },\n    at: function (pIndex) {\n      return this.getItems().at(pIndex);\n    },\n    findByViewType: function (pViewType) {\n      return this.getItems().where({\n        \"type\": pViewType\n      });\n    },\n    reset: function (pDestroyItems) {\n      var tmpDestroyItems = pDestroyItems || false;\n      if (tmpDestroyItems) this.destroyItems();\n      this.getItems().reset();\n    },\n    destroyItems: function (pItems) {\n      var tmpItems = pItems || this.getItems();\n\n      _.each(tmpItems.models, _.bind(function (pModel, pIndex) {\n        if (pModel.hasItems()) {\n          this.destroyItems(pModel.get('items'));\n        }\n\n        if (pModel.has('view') && _.isFunction(pModel.get('view').destroy)) {\n          pModel.get('view').destroy();\n        }\n      }, this));\n    },\n    refreshAll: function (pItems) {\n      var tmpItems = pItems || this.getItems();\n\n      _.each(tmpItems.models, _.bind(function (pModel, pIndex) {\n        if (pModel.hasItems()) {\n          this.refreshAll(pModel.get('items'));\n        }\n\n        if (_.isFunction(pModel.refresh)) {\n          this.refresh(pModel);\n        }\n      }, this));\n    },\n    refresh: function (pModel) {\n      var tmpModel = pModel || this;\n      BaseModel.prototype.refresh.call(tmpModel);\n    },\n    inviewEnable: function (pState, pCollection) {\n      var tmpCollection = pCollection || this.getItems();\n\n      _.each(tmpCollection.models, function (pModel, pIndex) {\n        pModel.set('inviewEnabled', pState);\n\n        if (pModel.hasItems()) {\n          if (this && typeof this.inviewEnable === 'function') {\n            this.inviewEnable(pState, pModel.get('items'));\n          }\n        }\n      }, this);\n    }\n  });\n  window.BaseCollectionModel = window.BaseCollectionModel || BurdaInfinite.models.base.BaseCollectionModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseCollectionModel);\n\n//# sourceURL=webpack:///./src/models/base/base-collection-model.js?");

/***/ }),

/***/ "./src/models/base/base-dynamic-view-model.js":
/*!****************************************************!*\
  !*** ./src/models/base/base-dynamic-view-model.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.base.BaseDynamicViewModel = BaseCollectionModel.extend({\n    defaults: {\n      el: [],\n      infiniteBlock: false,\n      initialDOMItem: true\n    },\n    initialize: function (pModel, pOptions) {\n      BaseCollectionModel.prototype.initialize.call(this, pModel, pOptions);\n\n      if (!_.isUndefined(pModel)) {\n        this.createDynamicItem(pModel);\n      }\n    },\n    createDynamicItem: function (pSettings, pOptions) {\n      var tmpView = {},\n          $tmpElement = pSettings.el,\n          tmpType = pSettings.type,\n          tmpSettings = _.extend({\n        model: this,\n        context: $tmpElement.closest('[data-view-context]').length > 0 ? $tmpElement.closest('[data-view-context]') : $(window)\n      }, pSettings, pOptions);\n      /**\n       * set new values\n       */\n\n\n      this.set(pSettings); // console.log(\">>> createView\", tmpType, tmpSettings);\n\n      switch (tmpType) {\n        case 'feedView':\n          tmpView = new BaseFeedView(tmpSettings);\n          break;\n\n        case 'infiniteBlockView':\n          tmpView = new InfiniteBlockView(tmpSettings);\n          tmpView.delegateInview(); //active inview functions\n\n          if (!tmpSettings.initialDOMItem) {\n            tmpView.delegateElements();\n          }\n\n          break;\n\n        case 'teaserFeedView':\n          tmpView = new TeaserFeedView(tmpSettings);\n          break;\n\n        case 'articleView':\n          tmpView = new ArticleView(tmpSettings);\n          break;\n\n        case 'stickyView':\n          tmpView = new StickyView(tmpSettings);\n          break;\n\n        case 'galleryView':\n          tmpView = new GalleryView(tmpSettings);\n          break;\n\n        case 'marketingView':\n          tmpView = new MarketingView(tmpSettings);\n          break;\n\n        case 'listSwipeableView':\n          tmpView = new BaseListSwipeableView(tmpSettings);\n          break;\n\n        case 'newsletterView':\n          tmpView = new BaseNewsletterView(tmpSettings);\n          break;\n\n        case 'hmNewsletterView':\n          tmpView = new HmNewsletterView(tmpSettings);\n          break;\n\n        case 'newsletterModalView':\n          tmpView = new NewsletterModalView(tmpSettings);\n          break;\n\n        case 'productView':\n          tmpView = new ProductView(tmpSettings);\n          break;\n\n        case 'productSliderView':\n          tmpView = new ProductSliderView(tmpSettings);\n          break;\n\n        case 'productLookView':\n          tmpView = new ProductLookView(tmpSettings);\n          break;\n\n        case 'anchorNavigationView':\n          tmpView = new AnchorNavigationView(tmpSettings);\n          break;\n\n        case 'ecommerceSlider':\n          tmpView = new EcommerceSliderView(tmpSettings);\n          break;\n\n        case 'lookView':\n          tmpView = new LookView(tmpSettings);\n          break;\n\n        default:\n          tmpView = new BaseView(tmpSettings);\n          break;\n      }\n\n      this.set('view', tmpView);\n    }\n  });\n  window.BaseDynamicViewModel = window.BaseDynamicViewModel || BurdaInfinite.models.base.BaseDynamicViewModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseDynamicViewModel);\n\n//# sourceURL=webpack:///./src/models/base/base-dynamic-view-model.js?");

/***/ }),

/***/ "./src/models/base/base-model.js":
/*!***************************************!*\
  !*** ./src/models/base/base-model.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.base.BaseModel = Backbone.Model.extend({\n    defaults: {\n      inviewEnabled: true,\n      initialDOMItem: true,\n      type: \"root\"\n    },\n    initialize: function (pModel, pOptions) {\n      _.extend(this, pOptions);\n    },\n    create: function (pData) {\n      this.set(pData);\n    },\n    inviewEnable: function (pState) {\n      this.set('inviewEnabled', pState);\n    },\n    hasItems: function () {\n      return false;\n    },\n    refresh: function () {\n      this.trigger('refresh', this);\n    },\n    setParentModel: function (pModel) {\n      this.set('parentModel', pModel, {\n        silent: true\n      });\n    },\n    setElement: function ($pElement) {\n      this.set('el', $pElement, {\n        silent: true\n      });\n      this.trigger('elementChanged', this.get('el'));\n    },\n    getParentModel: function () {\n      return this.get('parentModel');\n    }\n  });\n  window.BaseModel = window.BaseModel || BurdaInfinite.models.base.BaseModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseModel);\n\n//# sourceURL=webpack:///./src/models/base/base-model.js?");

/***/ }),

/***/ "./src/models/base/base-sidebar-model.js":
/*!***********************************************!*\
  !*** ./src/models/base/base-sidebar-model.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.base.BaseSidebarModel = Backbone.Model.extend({\n    defaults: {\n      \"is_open\": false\n    },\n    initialize: function (pOptions) {},\n    toggleOpenState: function () {\n      this.set('is_open', !this.get('is_open'));\n    }\n  });\n  window.BaseSidebarModel = window.BaseSidebarModel || BurdaInfinite.models.base.BaseSidebarModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseSidebarModel);\n\n//# sourceURL=webpack:///./src/models/base/base-sidebar-model.js?");

/***/ }),

/***/ "./src/models/device-model.js":
/*!************************************!*\
  !*** ./src/models/device-model.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.DeviceModel = Backbone.Model.extend({\n    defaults: {\n      isActive: false,\n      uid: -1,\n      uid_cookie_name: \"tc_ptid\",\n      basehost: window.location.hostname.split(\".\")[0],\n      cookieReferrerName: '_referrer',\n      isGoogleBot: navigator.userAgent.toLowerCase().indexOf('googlebot') > 0,\n      useWhatsapp: navigator.userAgent.match(/Android|iPhone/i) && !navigator.userAgent.match(/iPod|iPad/i) ? true : false\n    },\n    breakpoints: {},\n    breakpointValues: [],\n    breakpointKeys: [],\n    deviceBreakpointValues: [],\n    deviceBreakpointKeys: [],\n    deviceMapping: {},\n    deviceValues: [],\n    deviceKeys: [],\n    lastBreakpoint: {},\n    lastDeviceBreakpoint: {},\n    initialize: function (pAttributes, pOptions) {\n      //var tmpOptions = _.extend(this.defaults, pOptions);\n      Backbone.Model.prototype.initialize.call(this, pAttributes, pOptions);\n      this.breakpoints = pOptions.Breakpoints;\n      this.breakpointValues = _.values(this.breakpoints);\n      this.breakpointKeys = _.keys(this.breakpoints);\n      this.deviceMapping = pOptions.DeviceMapping;\n      this.deviceValues = _.values(this.deviceMapping);\n      this.deviceKeys = _.keys(this.deviceMapping);\n      this.deviceBreakpointValues = [];\n      this.deviceBreakpointKeys = [];\n      this.set(\"uuid\", this.getCookie(this.get(\"uid_cookie_name\")));\n      this.set(\"cookieReferrerName\", this.get(\"basehost\") + this.getReferrerCookieName());\n      this.set('breakpoints', new Backbone.Collection());\n      this.set('deviceBreakpoints', new Backbone.Collection());\n      this.writeReferrerCookie();\n      this.createBreakpoints();\n      this.createDeviceBreakpoints();\n      this.checkActiveBreakpoint();\n      this.checkActiveDevice();\n      $(window).resize(_.bind(_.debounce(function () {\n        this.checkActiveBreakpoint();\n        this.checkActiveDevice();\n      }, 200), this));\n      this.set('isActive', this.getBreakpoints().length > 0); // console.log(\"deviceModelInfo\", JSON.parse(this.getReferrerCookie()));\n    },\n    createBreakpoints: function () {\n      var tmpModelItem = {},\n          tmpMinVal = 0,\n          tmpMaxVal = 0,\n          tmpKey = \"\";\n\n      _.each(this.breakpointValues, _.bind(function (pVal, pIndex) {\n        tmpKey = this.breakpointKeys[pIndex];\n        tmpMinVal = pVal;\n        tmpModelItem = {\n          id: tmpKey,\n          min_width: tmpMinVal,\n          active: false\n        };\n\n        if (pIndex < this.breakpointValues.length - 1) {\n          tmpMaxVal = this.breakpointValues[pIndex + 1] - 1;\n          tmpModelItem.max_width = tmpMaxVal;\n        }\n\n        this.getBreakpoints().add(tmpModelItem);\n      }, this));\n    },\n    createDeviceBreakpoints: function () {\n      var tmpModelItem = {},\n          tmpKey = \"\",\n          tmpNextKey;\n      this.deviceBreakpointValues = [];\n      this.deviceBreakpointKeys = [];\n\n      _.each(this.deviceValues, _.bind(function (pVal, pIndex) {\n        tmpKey = this.deviceKeys[pIndex];\n        tmpModelItem = {\n          id: tmpKey,\n          min_width: this.getBreakpoints().get(pVal).get('min_width'),\n          active: false,\n          mapping: pVal\n        };\n\n        if (pIndex < this.deviceValues.length - 1) {\n          tmpNextKey = this.deviceValues[pIndex + 1];\n          tmpModelItem.max_width = parseInt(this.getBreakpoints().get(tmpNextKey).get('min_width')) - 1;\n        }\n\n        this.deviceBreakpointValues.push(tmpModelItem.min_width);\n        this.deviceBreakpointKeys.push(tmpKey);\n        this.getDeviceBreakpoints().add(tmpModelItem);\n      }, this));\n    },\n    checkActiveBreakpoint: function () {\n      var tmpSize = {\n        width: $(window).width(),\n        height: $(window).height()\n      },\n          tmpKey = \"\",\n          tmpBreakpoint = null,\n          tmpValues = _.clone(this.breakpointValues).reverse(),\n          tmpKeys = _.clone(this.breakpointKeys).reverse();\n      /**\n       * reset active state\n       */\n\n\n      _.each(this.getBreakpoints().models, _.bind(function (pItem) {\n        if (pItem.has('active')) pItem.set({\n          active: false\n        }, {\n          silent: true\n        });\n      }, this));\n      /**\n       * set active state\n       */\n\n\n      _.every(tmpValues, _.bind(function (pVal, pIndex) {\n        if (tmpSize.width >= pVal) {\n          tmpKey = tmpKeys[pIndex];\n          tmpBreakpoint = this.getBreakpoints().get(tmpKey);\n          tmpBreakpoint.set({\n            active: true\n          }, {\n            silent: true\n          });\n\n          if (tmpBreakpoint.id != this.lastBreakpoint.id) {\n            this.getBreakpoints().trigger('change:active');\n          }\n\n          this.lastBreakpoint = tmpBreakpoint;\n        }\n\n        return tmpSize.width < pVal;\n      }, this));\n    },\n    checkActiveDevice: function () {\n      var tmpSize = {\n        width: $(window).width(),\n        height: $(window).height()\n      },\n          tmpValues = _.clone(this.deviceBreakpointValues).reverse(),\n          tmpKeys = _.clone(this.deviceBreakpointKeys).reverse(),\n          tmpBreakpoint = null,\n          tmpKey = \"\";\n      /**\n       * reset active state\n       */\n\n\n      _.each(this.getDeviceBreakpoints().models, _.bind(function (pItem) {\n        if (pItem.has('active')) pItem.set({\n          active: false\n        }, {\n          silent: true\n        });\n      }, this));\n      /**\n       * set active state\n       */\n\n\n      _.every(tmpValues, _.bind(function (pVal, pIndex) {\n        if (tmpSize.width >= pVal) {\n          tmpKey = tmpKeys[pIndex];\n          tmpBreakpoint = this.getDeviceBreakpoints().get(tmpKey);\n          tmpBreakpoint.set({\n            active: true\n          }, {\n            silent: true\n          });\n\n          if (tmpBreakpoint.id != this.lastDeviceBreakpoint.id) {\n            this.getDeviceBreakpoints().trigger('change:active', tmpBreakpoint);\n          }\n\n          this.lastDeviceBreakpoint = tmpBreakpoint;\n        }\n\n        return tmpSize.width < pVal;\n      }, this));\n    },\n    writeReferrerCookie: function () {\n      var tmpParams = this.getURLParams(),\n          tmpCookie = $.extend(this.getCookie(this.getReferrerCookieName()), {}),\n          tmpReferrer = document.referrer,\n          tmpHostname = this.parseUrl(tmpReferrer).hostname,\n          tmpUtmCampaign = tmpParams.utm_campaign;\n      tmpCookie.referrer = tmpReferrer;\n      tmpCookie.currentUtmCampaign = tmpUtmCampaign; //could be undefined if no campaign in usage\n\n      if (tmpUtmCampaign != \"\" && tmpUtmCampaign != undefined) {\n        tmpCookie.lastKnownUtmCampaign = tmpUtmCampaign;\n      }\n\n      tmpCookie.referrerIsMe = tmpReferrer != \"\" && tmpHostname.indexOf(this.get('basehost')) > -1;\n      tmpCookie.referrerIsFb = tmpHostname.indexOf(\"facebook\") > -1; //counting clicks after FB referrer - needed for the FB layer/ads/likegates policy\n\n      if (tmpCookie.referrerIsFb) {\n        tmpCookie.comesFromFB = true;\n        tmpCookie.clicksAfterFbReferrer = 0;\n      } else if (tmpCookie.comesFromFB == true) {\n        tmpCookie.clicksAfterFbReferrer++;\n      }\n\n      this.setCookieValue(this.getReferrerCookieName(), JSON.stringify(tmpCookie));\n    },\n    parseUrl: function (pUrl) {\n      var a = document.createElement('a');\n      a.href = pUrl;\n      return a;\n    },\n    setCookieValue: function (pCookieName, pValue, pOptions) {\n      var tmpOptions = _.extend({\n        path: '/'\n      }, pOptions);\n\n      $.cookie(pCookieName, pValue, tmpOptions);\n    },\n    getCookie: function (pCookieName) {\n      return $.cookie(pCookieName);\n    },\n    getReferrerCookieName: function () {\n      return this.get(\"cookieReferrerName\");\n    },\n    getReferrerCookie: function () {\n      return $.cookie(this.getReferrerCookieName());\n    },\n    getURLParams: function (pParam) {\n      return _.object(_.compact(_.map(location.search.slice(1).split('&'), function (item) {\n        if (item) return item.split('=');\n      })));\n    },\n    getBreakpoints: function () {\n      return this.get('breakpoints');\n    },\n    getDeviceBreakpoints: function () {\n      return this.get('deviceBreakpoints');\n    }\n  });\n  window.DeviceModel = window.DeviceModel || BurdaInfinite.models.DeviceModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (DeviceModel);\n\n//# sourceURL=webpack:///./src/models/device-model.js?");

/***/ }),

/***/ "./src/models/infinite-block-data-model.js":
/*!*************************************************!*\
  !*** ./src/models/infinite-block-data-model.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.InfiniteBlockDataModel = Backbone.Model.extend({\n    $el: [],\n    defaults: function () {\n      return {\n        nid: '',\n        uuid: '',\n        path: '',\n        title: '',\n        category: '',\n        subCategory: '',\n        contentType: '',\n        contentSubType: '',\n        noTrack: ''\n      };\n    },\n    initialize: function (pAttributes, pOptions) {\n      this.$el = pAttributes.$el || pAttributes.el;\n      this.parseElement(this.$el);\n    },\n    parseElement: function ($pElement) {\n      var tmpNid = $pElement.data('nid'),\n          tmpUuid = $pElement.data('uuid'),\n          tmpPath = $pElement.data('path') || $pElement.data('history-url'),\n          tmpTitle = $pElement.data('title') || $pElement.data('history-title'),\n          tmpCategory = $pElement.data('category'),\n          tmpSubCategory = $pElement.data('sub-category'),\n          tmpContentType = $pElement.data('content-type'),\n          tmpContentSubType = $pElement.data('content-sub-type'),\n          // tmpClasses = [],\n      tmpTrackingContainerType = $pElement.data('tr-container-type'),\n          tmpNoTrack = $pElement.data('no-track'); // if ($pElement.find('.item-content').addBack().prop(\"css\")) {\n      //   tmpClasses = $pElement.find('.item-content').addBack().attr('class').split(' ') || [];\n      // }\n\n      this.set({\n        'nid': tmpNid,\n        'uuid': tmpUuid,\n        'path': tmpPath,\n        'title': tmpTitle,\n        'category': tmpCategory,\n        'subCategory': tmpSubCategory,\n        'contentType': tmpContentType,\n        'contentSubType': tmpContentSubType,\n        // 'cssClass': tmpClasses,\n        'trackingContainerType': tmpTrackingContainerType,\n        'noTrack': tmpNoTrack\n      });\n    },\n    getElement: function () {\n      return this.get('$el') || [];\n    }\n  });\n  window.InfiniteBlockDataModel = window.InfiniteBlockDataModel || BurdaInfinite.models.InfiniteBlockDataModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InfiniteBlockDataModel);\n\n//# sourceURL=webpack:///./src/models/infinite-block-data-model.js?");

/***/ }),

/***/ "./src/models/modal-search-model.js":
/*!******************************************!*\
  !*** ./src/models/modal-search-model.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite, AppConfig) {\n  BurdaInfinite.models.ModalSearchModel = BaseCollectionModel.extend({\n    defaults: {\n      is_open: false\n    },\n    ajaxModel: null,\n    url: AppConfig.searchApiUrl,\n    isUserSearching: false,\n\n    initialize(pOptions) {\n      BaseCollectionModel.prototype.initialize.call(this, pOptions);\n    },\n\n    fetch(pString, pOptions) {\n      // _.extend(pOptions, {reset: true, traditional: true});\n      // return Backbone.Model.prototype.fetch.apply(this, arguments);\n      if (this.ajaxModel != null) this.ajaxModel.destroy();\n      this.ajaxModel = new AjaxModel({\n        url: `${this.url}?fulltext=${pString}`,\n        callback: _.bind(this.parse, this)\n      });\n      this.trigger('request', this);\n      this.ajaxModel.execute();\n    },\n\n    parse(pAjaxContent) {\n      const $tmpItem = $(pAjaxContent).find('.infinite-item').addBack().filter('.infinite-item');\n      this.getItems().add({\n        el: $tmpItem\n      });\n      this.trigger('sync', this);\n    },\n\n    toggleOpenState() {\n      this.set('is_open', !this.get('is_open'));\n    }\n\n  });\n  window.ModalSearchModel = window.ModalSearchModel || BurdaInfinite.models.ModalSearchModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite, AppConfig);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ModalSearchModel);\n\n//# sourceURL=webpack:///./src/models/modal-search-model.js?");

/***/ }),

/***/ "./src/models/page-offsets-model.js":
/*!******************************************!*\
  !*** ./src/models/page-offsets-model.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.PageOffsetsModel = Backbone.Model.extend({\n    initialize: function (pOptions) {\n      /**\n       * Collection in Collection is not possible >:/\n       * We need the 'items' property here\n       */\n\n      /**\n       * check if this is obsolete\n       * function calculateOffset(edge) {\n             * var displacingElements = document.querySelectorAll('[data-offset-' + edge + ']');\n       * @type {{top: number, right: number, left: number, bottom: number}}\n       */\n      this.defaultPageOffset = {\n        top: 0,\n        right: 0,\n        left: 0,\n        bottom: 0,\n        height: 0\n      };\n      this.set('items', new Backbone.Collection());\n      this.add({\n        id: 'offsetPage',\n        $el: {},\n        active: false,\n        offsets: this.defaultPageOffset\n      });\n      this.add({\n        id: 'offsetToolbar',\n        $el: {},\n        active: false,\n        offsets: this.defaultPageOffset\n      }, {\n        silent: true\n      });\n      this.add({\n        id: 'offsetMenuMain',\n        $el: {},\n        active: false,\n        offsets: this.defaultPageOffset\n      }, {\n        silent: true\n      });\n\n      _.extend(this, pOptions);\n\n      this.listenTo(this.getItems(), 'change:offsets change:active', this.onCalculatePageHandler, this);\n    },\n    onCalculatePageHandler: function (pModel) {\n      if (pModel.id == \"offsetPage\") return;\n      var tmpPageModel = this.getModel('offsetPage'),\n          tmpPageRelevants = this.getPageRelevantItems();\n      /**\n       * Only top gap at this moment\n       * TODO: dynamic left / top / right / bottom gaps\n       */\n\n      var tmpPageOffsets = _.reduce(tmpPageRelevants, _.bind(function (pMemo, pNum) {\n        var tmpOffsets = pNum.get('offsets'),\n            tmpOffsets_2 = pMemo;\n        if (!_.has(tmpOffsets_2, 'top')) tmpOffsets_2 = this.defaultPageOffset;\n\n        if (tmpOffsets.height != undefined) {\n          tmpOffsets.top = tmpOffsets.height;\n        }\n\n        if (tmpOffsets_2.height != undefined) {\n          tmpOffsets_2.top = tmpOffsets_2.height;\n        }\n\n        return {\n          top: tmpOffsets.top + tmpOffsets_2.top,\n          left: tmpOffsets.left + tmpOffsets_2.left,\n          right: tmpOffsets.right + tmpOffsets_2.right,\n          bottom: tmpOffsets.bottom + tmpOffsets_2.bottom\n        };\n      }, this), this.defaultPageOffset);\n\n      tmpPageModel.set('offsets', tmpPageOffsets);\n    },\n    add: function (pModel, pOptions) {\n      var tmpOptions = _.extend(pOptions || {}, {\n        merge: true\n      }),\n          tmpModel = this.getItems().add(pModel, tmpOptions);\n\n      tmpModel.set('active', true);\n    },\n    deactivate: function (pModel, pOptions) {\n      if (!pModel || this.getItems().get(pModel.id) === undefined) return;\n      this.getModel(pModel.id).set('active', false);\n    },\n    remove: function (pModel, pOptions) {\n      var tmpOptions = _.extend(pOptions || {}, {\n        merge: true\n      });\n\n      this.deactivate(pModel, pOptions);\n      this.getItems().remove(pModel, tmpOptions);\n    },\n    getPageRelevantItems: function () {\n      var tmpItems = [];\n\n      _.find(this.getItems().models, function (pModel) {\n        if (pModel.attributes.pageRelevant === true && pModel.attributes.active === true) {\n          tmpItems.push(pModel);\n        }\n      });\n\n      return tmpItems;\n    },\n    getItems: function () {\n      return this.get('items');\n    },\n    getModel: function (pModelId) {\n      return this.getItems().get(pModelId);\n    }\n  });\n  window.PageOffsetsModel = window.PageOffsetsModel || BurdaInfinite.models.PageOffsetsModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (PageOffsetsModel);\n\n//# sourceURL=webpack:///./src/models/page-offsets-model.js?");

/***/ }),

/***/ "./src/models/sidebar-model.js":
/*!*************************************!*\
  !*** ./src/models/sidebar-model.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.models.SidebarModel = Backbone.Model.extend({\n    defaults: {\n      \"is_open\": false\n    },\n    initialize: function (pOptions) {},\n    toggleOpenState: function () {\n      this.set('is_open', !this.get('is_open'));\n    }\n  });\n  window.SidebarModel = window.SidebarModel || BurdaInfinite.models.SidebarModel;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (SidebarModel);\n\n//# sourceURL=webpack:///./src/models/sidebar-model.js?");

/***/ }),

/***/ "./src/utils/base-utils.js":
/*!*********************************!*\
  !*** ./src/utils/base-utils.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consts_model_ids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts/model-ids */ \"./src/consts/model-ids.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.utils.BaseUtils = {\n    attach: function () {},\n    delegateElements: function ($pContainer) {\n      BurdaInfinite.utils.BaseUtils.updateBtnActions($pContainer);\n      BurdaInfinite.utils.BaseUtils.updateSocials($pContainer);\n      BurdaInfinite.utils.BaseUtils.updateTimeAgo($pContainer);\n    },\n    updateSocials: function ($pContainer) {\n      var tmpDeviceModel;\n      if (typeof BM != \"undefined\") tmpDeviceModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deviceModel);\n      /**\n       * Whatsapp\n       */\n\n      if (tmpDeviceModel != undefined && tmpDeviceModel.get(\"useWhatsapp\")) {\n        $pContainer.find('.icon-whatsapp').addClass('active');\n        $pContainer.find('.icon-whatsapp').css('display', 'inline-flex');\n      }\n\n      $pContainer.find('.icon-pinterest[data-url]').unbind('click.socialsPinterest').bind('click.socialsPinterest', $.proxy(function (pEvent) {\n        var $tmpItem = $(pEvent.currentTarget),\n            tmpURL = $tmpItem.data('url'),\n            tmpMedia = $tmpItem.data('media-url'),\n            tmpDescription = $tmpItem.data('description'),\n            tmpPinterestDefaultURL = 'https://pinterest.com/pin/create/button/';\n\n        if (typeof PinUtils != 'undefined') {\n          PinUtils.pinOne({\n            url: tmpURL,\n            media: tmpMedia,\n            description: tmpDescription\n          });\n        } else {\n          tmpPinterestDefaultURL += '?url=' + encodeURIComponent(tmpURL);\n          tmpPinterestDefaultURL += '&media=' + encodeURIComponent(tmpMedia);\n          tmpPinterestDefaultURL += '&description=' + encodeURIComponent(tmpDescription);\n          BurdaInfinite.utils.BaseUtils.disableBeforeUnloadHandler();\n          window.open(tmpPinterestDefaultURL, '_blank');\n        }\n\n        return false;\n      }, this));\n      $pContainer.find('.icon-facebook[data-url]').unbind('click.socialsFacebook').bind('click.socialsFacebook', $.proxy(function (pEvent) {\n        var $tmpItem = $(pEvent.currentTarget),\n            tmpURL = $tmpItem.data('url'),\n            tmpMedia = $tmpItem.data('media-url') || '',\n            tmpMediaSource = $tmpItem.data('media-source') || '',\n            tmpDescription = $tmpItem.data('description') || '',\n            tmpFacebookURL = 'https://www.facebook.com/sharer/sharer.php?m2w&u=',\n            $tmpItemMedia = [],\n            $tmpArticleHeadline = [];\n\n        if (typeof FB != 'undefined') {\n          /**\n           * If shareName empty check if articleHeadline available\n           */\n          $tmpItemMedia = $tmpItem.parents('.item-paragraph--media');\n\n          if (tmpDescription == '' && $tmpItemMedia.length > 0) {\n            $tmpArticleHeadline = $tmpItem.parents('.item-content--article').find('h1');\n\n            if ($tmpArticleHeadline.length > 0) {\n              tmpDescription = $tmpArticleHeadline.text();\n            }\n          }\n\n          var fbParams = {\n            method: 'feed',\n            caption: window.location.hostname,\n            name: tmpDescription,\n            link: tmpURL\n          };\n          if (tmpMedia != \"\") fbParams.picture = decodeURIComponent(tmpMedia);\n          FB.ui(fbParams);\n        } else {\n          BurdaInfinite.utils.BaseUtils.disableBeforeUnloadHandler();\n          window.open(tmpFacebookURL + encodeURIComponent(tmpURL), '_blank');\n        }\n\n        return false;\n      }, this));\n      $pContainer.find('.icon-email[data-url]').unbind('click.socialsEmail').bind('click.socialsEmail', $.proxy(function (pEvent) {\n        var $tmpItem = $(pEvent.currentTarget),\n            tmpURL = $tmpItem.data('url'),\n            tmpDescription = encodeURIComponent($tmpItem.data('description')),\n            tmpEmailSubject = encodeURIComponent($tmpItem.data('email-subject')),\n            tmpEmailShareText = encodeURIComponent($tmpItem.data('email-share-text')),\n            tmpSpacer = encodeURIComponent(\"\\r\\n\\r\\n\"),\n            tmpEmailURL = \"mailto:?subject=\" + tmpEmailSubject + \" \" + tmpDescription + \"&body=\" + tmpEmailShareText + tmpSpacer + tmpDescription + tmpSpacer + tmpURL;\n        BurdaInfinite.utils.BaseUtils.disableBeforeUnloadHandler();\n        window.open(tmpEmailURL, '_top');\n        return false;\n      }, this));\n    },\n    updateBtnActions: function ($pContainer) {\n      $pContainer.find('[data-btn-action]').unbind('click.btnAction').bind('click.btnAction', function (pEvent) {\n        var tmpAction = $(this).data('btn-action'),\n            tmpValue = $(this).data('btn-action-value'),\n            tmpTarget = $(this).data('btn-action-target'),\n            $tmpTarget = [];\n        if (tmpTarget != \"\") $tmpTarget = $(this).parents(tmpTarget);\n        if ($tmpTarget.length <= 0) $tmpTarget = $('body');\n\n        if (tmpAction != \"\" && tmpValue != \"\") {\n          switch (tmpAction) {\n            case 'class-extend':\n              $tmpTarget.toggleClass(tmpValue);\n              $(this).toggleClass('is-active');\n              break;\n          }\n        }\n      });\n    },\n    updateTimeAgo: function ($pContainer) {\n      $pContainer.find('.text-timestamp').timeago();\n    },\n    disableBeforeUnloadHandler: function () {\n      window.allowBeforeUnload = false;\n\n      _.delay(function () {\n        window.allowBeforeUnload = true;\n      }, 100);\n    },\n    replaceUrlParam: function (url, paramName, paramValue) {\n      if (paramValue == null) paramValue = '';\n      var pattern = new RegExp('\\\\b(' + paramName + '=).*?(&|$)');\n\n      if (url.search(pattern) >= 0) {\n        return url.replace(pattern, '$1' + paramValue + '$2');\n      }\n\n      return url + (url.indexOf('?') > 0 ? '&' : '?') + paramName + '=' + paramValue;\n    }\n  };\n  $('body').once('BaseUtils').each(function () {\n    $(window).on('base-utils:update', function (pEvent, $pContainer) {\n      BurdaInfinite.utils.BaseUtils.delegateElements($pContainer);\n    });\n  });\n  window.BaseUtils = window.BaseUtils || BurdaInfinite.utils.BaseUtils;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseUtils);\n\n//# sourceURL=webpack:///./src/utils/base-utils.js?");

/***/ }),

/***/ "./src/views/anchor-navigation-view.js":
/*!*********************************************!*\
  !*** ./src/views/anchor-navigation-view.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.AnchorNavigationView = BaseView.extend({\n    $links: [],\n    pageOffsetsModel: null,\n    offsetsPageModel: null,\n    offsetTop: 0,\n    initialize: function (pOptions) {\n      this.$links = this.$el.find('li a');\n      this.$links.click($.proxy(this.onClickHandler, this));\n      this.pageOffsetsModel = BM.reuseModel(ModelIds.pageOffsetsModel);\n\n      if (this.pageOffsetsModel != undefined && this.pageOffsetsModel != null) {\n        this.offsetsPageModel = this.pageOffsetsModel.getModel('offsetPage');\n        this.offsetTop = this.offsetsPageModel.get('offsets').top;\n        this.listenTo(this.offsetsPageModel, 'change:offsets', this.onOffsetHandler, this);\n      }\n\n      if (window.location.hash && this.$el.find('a[href=\"' + window.location.hash + '\"]').length > 0) {\n        setTimeout($.proxy(function () {\n          this.scrollToElement(window.location.hash);\n        }, this), 1500);\n      }\n    },\n    scrollToElement: function (pElementId) {\n      $(\"html, body\").animate({\n        scrollTop: Math.round($(pElementId).offset().top - this.offsetTop - AppConfig.padding)\n      }, {\n        duration: 1000,\n        easing: 'easeInOutCubic'\n      });\n      return false;\n    },\n    onClickHandler: function (pEvent) {\n      var tmpItemId = $(pEvent.currentTarget).attr('href');\n      this.scrollToElement(tmpItemId);\n      return false;\n    },\n    onOffsetHandler: function (pModel) {\n      this.offsetTop = pModel.get('offsets').top;\n    }\n  });\n  window.AnchorNavigationView = window.AnchorNavigationView || BurdaInfinite.views.AnchorNavigationView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (AnchorNavigationView);\n\n//# sourceURL=webpack:///./src/views/anchor-navigation-view.js?");

/***/ }),

/***/ "./src/views/article-view.js":
/*!***********************************!*\
  !*** ./src/views/article-view.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.ArticleView = BaseDynamicView.extend({\n    articleReadedTrigger: null,\n    articleReadedDelay: 0,\n    articleSEOTitle: '',\n    initialize: function (pOptions) {\n      BaseDynamicView.prototype.initialize.call(this, pOptions);\n      this.articleReadedDelay = AppConfig.articleReadedDelay || 2000;\n\n      if (this.infiniteBlockDataModel != undefined && this.infiniteBlockDataModel.has('title')) {\n        this.articleSEOTitle = this.infiniteBlockDataModel.get('title');\n      }\n\n      this.initTracking();\n      this.renderParagraphSocials();\n    },\n    initTracking: function () {\n      if (this.$el.find('.cet').length <= 0) return;\n      this.articleReadedTrigger = new Waypoint.Inview({\n        element: this.$el.find('.cet'),\n        exit: _.bind(function (pDirection) {\n          this.stopArticleReadedInterval();\n        }, this),\n        enter: _.bind(function (pDirection) {\n          this.stopArticleReadedInterval();\n          this.readedInterval = setInterval($.proxy(function () {\n            this.trackArticleReaded();\n            this.stopArticleReadedInterval();\n          }, this), this.articleReadedDelay);\n        }, this)\n      });\n    },\n    renderParagraphSocials: function () {\n      if (typeof twttr != 'undefined') {\n        twttr.widgets.load(this.$el[0]);\n      }\n\n      if (typeof PinUtils != 'undefined') {\n        PinUtils.build(this.$el[0]);\n      }\n\n      if (typeof instgrm != 'undefined') {\n        instgrm.Embeds.process();\n      }\n\n      if (typeof tracdelight != \"undefined\") {\n        window.tracdelight.then(_.bind(function (td) {\n          $.each(this.$el.find('.td-widget'), function (pIndex, pItem) {\n            td.parse(pItem);\n          });\n        }, this)).catch(function (err) {\n          console.error(\"Tracdelight Error\", err);\n        });\n      }\n    },\n    stopArticleReadedInterval: function () {\n      clearInterval(this.readedInterval);\n      this.readedInterval = 0;\n    },\n    trackArticleReaded: function () {\n      this.articleReadedTrigger.destroy();\n\n      if (typeof TrackingManager != 'undefined') {\n        TrackingManager.trackEvent({\n          category: 'mkt-userInteraction',\n          action: 'readArticle',\n          label: this.articleSEOTitle,\n          eventNonInteraction: false\n        }, TrackingManager.getAdvTrackingByElement(this.$el));\n      }\n    }\n  });\n  window.ArticleView = window.ArticleView || BurdaInfinite.views.ArticleView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ArticleView);\n\n//# sourceURL=webpack:///./src/views/article-view.js?");

/***/ }),

/***/ "./src/views/base/base-dynamic-view.js":
/*!*********************************************!*\
  !*** ./src/views/base/base-dynamic-view.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _base_inview_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base-inview-view */ \"./src/views/base/base-inview-view.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  'use strict';\n\n  BurdaInfinite.views.base.BaseDynamicView = _base_inview_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend({\n    type: 'baseDynamicView',\n    initialCall: false,\n    initialDOMItem: true,\n    infiniteBlockDataModel: null,\n\n    initialize(pOptions) {\n      _base_inview_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.initialize.call(this, pOptions);\n      this.parseInfiniteView(this.$el, {\n        initialCall: this.initialCall\n      });\n    },\n\n    parseInfiniteView(pContainer, pSettings) {\n      if (pSettings.initialDOMItem === false) this.initialDOMItem = false;\n\n      var tmpSettings = _.extend({\n        modelList: this.model,\n        initialCall: false,\n        //todo find a better name\n        //delegateElements: false,\n        initialDOMItem: this.initialDOMItem\n      }, pSettings),\n          $tmpContainer = $(pContainer),\n          $tmpViewTypes = [];\n\n      if (this.$el[0] == $tmpContainer[0] || tmpSettings.initialCall) {\n        $tmpViewTypes = $tmpContainer.find(\"[data-view-type]\").not($tmpContainer.find('[data-view-type] [data-view-type]'));\n      } else {\n        $tmpViewTypes = $tmpContainer.find(\"[data-view-type]\").addBack().not($tmpContainer.find('[data-view-type]'));\n      }\n\n      if ($tmpViewTypes.length > 0) {\n        $.each($tmpViewTypes, $.proxy(function (pIndex, pItem) {\n          tmpSettings.el = $(pItem);\n          this.createDynamicItem(tmpSettings);\n        }, this));\n      } else if (tmpSettings.initialCall == false && _.isUndefined($tmpContainer.data('view-type'))) {\n        /**\n         * if no data-type found -> create abstractView -> internal / external / etc / listener\n         */\n        tmpSettings.el = $tmpContainer;\n        this.createDynamicItem(tmpSettings);\n      }\n    },\n\n    createDynamicItem(pSettings) {\n      var $tmpItem = pSettings.el,\n          tmpViewType = $tmpItem.data('view-type'),\n          tmpModel = new BaseDynamicViewModel();\n\n      if (tmpViewType == \"infiniteBlockView\" && $tmpItem.data('uuid') || tmpViewType == \"infiniteBlockView\" && $tmpItem.data('tr-container-type')) {\n        this.infiniteBlockDataModel = new InfiniteBlockDataModel({\n          $el: $tmpItem\n        });\n      }\n\n      pSettings.modelList.add(tmpModel); //trigger change events\n\n      tmpModel.createDynamicItem({\n        el: $tmpItem,\n        type: tmpViewType,\n        //TODO check performance\n        initialDOMItem: $tmpItem.closest('.region-feed').length <= 0,\n        infiniteBlock: tmpViewType == 'infiniteBlockView'\n      }, {\n        deviceModel: this.deviceModel,\n        infiniteBlockDataModel: this.infiniteBlockDataModel\n      });\n      $tmpItem.data('infiniteModel', tmpModel);\n    },\n\n    destroy() {\n      BaseView.prototype.destroy.call(this);\n    }\n\n  });\n  window.BaseDynamicView = window.BaseDynamicView || BurdaInfinite.views.base.BaseDynamicView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseDynamicView);\n\n//# sourceURL=webpack:///./src/views/base/base-dynamic-view.js?");

/***/ }),

/***/ "./src/views/base/base-feed-view.js":
/*!******************************************!*\
  !*** ./src/views/base/base-feed-view.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.base.BaseFeedView = BaseDynamicView.extend({\n    context: $(window),\n    $feedItemsContainer: {},\n    lastInfiniteItem: {},\n    preloader: null,\n    infinite: null,\n    initFeed: true,\n    atBottomOfPage: false,\n    fallbackNaviHeight: 56,\n    naviHeight: 0,\n    initialize: function (pOptions) {\n      BaseDynamicView.prototype.initialize.call(this, pOptions);\n      this.naviHeight = document.getElementById('menu-main-navigation').offsetHeight || this.fallbackNaviHeight;\n      this.context = $(this.context); //force jquery element\n\n      this.$feedItemsContainer = this.$el.find('.container-feed-items'); //auto init\n\n      if (this.initFeed) this.rebuildFeed();\n      this.listenTo(this.model, \"change:is_disabled\", this.onDisableHandler);\n      this.listenTo(this.model, \"reset\", this.onResetHandler, this);\n    },\n    rebuildFeed: function () {\n      if (this.infinite !== null) this.infinite.destroy();\n      this.infinite = new Waypoint.Infinite({\n        context: this.context[0],\n        element: this.$el,\n        executeCallback: _.bind(this.executeCallback, this),\n        preAppendCallback: _.bind(this.preAppendCallback, this),\n        appendCallback: _.bind(this.appendCallback, this),\n        offset: function () {\n          return this.context.innerHeight() * 2 - this.adapter.outerHeight();\n        }\n      });\n    },\n    executeCallback: function () {\n      this.lastInfiniteItem = this.$el.find('.infinite-item:last').length > 0 ? this.$el.find('.infinite-item:last') : this.$el;\n      if (this.preloader != null) this.preloader.hide(true, true);\n      this.preloader = new SpinnerCubeView({\n        el: this.lastInfiniteItem\n      });\n    },\n    preAppendCallback: function (pItem) {\n      //scroll to new appended article if someone scroll to the bottom and saw the preloader\n      var atBottomOfPageCheck = window.scrollY + window.innerHeight === document.body.clientHeight;\n\n      if (atBottomOfPageCheck) {\n        this.atBottomOfPage = true;\n      }\n    },\n    appendCallback: function ($appendedElement) {\n      var appendedElement = $appendedElement[0];\n\n      if (this.preloader != null) {\n        this.preloader.hide(true, true);\n        this.preloader = null;\n      }\n\n      if (this.atBottomOfPage === true && $('body').hasClass('page-article')) {\n        $('html, body').animate({\n          scrollTop: appendedElement.offsetTop - this.naviHeight\n        }, {\n          duration: 500,\n          easing: 'easeInOutCubic'\n        });\n        this.atBottomOfPage = false;\n      }\n\n      this.parseInfiniteView($appendedElement, {\n        modelList: this.model,\n        initialDOMItem: false\n      });\n    },\n    onDisableHandler: function (pDisabled) {\n      if (this.infinite == null || this.infinite.waypoint == undefined) return;\n\n      if (pDisabled) {\n        this.infinite.waypoint.disable();\n      } else {\n        this.infinite.waypoint.enable();\n      }\n    },\n    onResetHandler: function () {\n      this.clear();\n    },\n    appendElement: function (pElement) {\n      this.$feedItemsContainer.append(pElement).fadeIn();\n\n      if (this.infinite == null) {\n        this.rebuildFeed();\n      } else {\n        this.refreshFeed();\n      }\n    },\n    refreshFeed: function () {\n      this.infinite.refresh();\n    },\n    clear: function () {\n      this.$feedItemsContainer.empty();\n\n      if (this.infinite != null) {\n        this.infinite.destroy();\n      }\n    },\n    destroy: function () {\n      this.infinite.destroy();\n      BaseDynamicView.prototype.destroy.call(this);\n    }\n  });\n  window.BaseFeedView = window.BaseFeedView || BurdaInfinite.views.base.BaseFeedView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseFeedView);\n\n//# sourceURL=webpack:///./src/views/base/base-feed-view.js?");

/***/ }),

/***/ "./src/views/base/base-inview-view.js":
/*!********************************************!*\
  !*** ./src/views/base/base-inview-view.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.base.BaseInviewView = BaseView.extend({\n    inview: null,\n    initialize: function (pOptions) {\n      BaseView.prototype.initialize.call(this, pOptions);\n    },\n    delegateInview: function () {\n      //this.model.set('inview', 'init');\n      // console.log(\">>> delegateInview\");\n      if (this.inview != null) this.inview.destroy();\n      this.inview = new Waypoint.Inview({\n        element: this.$el,\n        exited: _.bind(function (direction) {\n          //console.log('Exited triggered with direction ' + direction)\n          this.model.set('inview', {\n            state: 'exited',\n            direction: direction\n          });\n          this.onExitedHandler(direction);\n        }, this),\n        exit: _.bind(function (direction) {\n          //console.log('Exit triggered with direction ' + direction)\n          this.model.set('inview', {\n            state: 'exit',\n            direction: direction\n          });\n          this.onExitHandler(direction);\n        }, this),\n        entered: _.bind(function (direction) {\n          //console.log('Entered triggered with direction ' + direction)\n          this.model.set('inview', {\n            state: 'entered',\n            direction: direction\n          });\n          this.onEnteredHandler(direction);\n        }, this),\n        enter: _.bind(function (direction) {\n          // this.$el.addClass('in');\n          _.delay(_.bind(function () {\n            //console.log('Enter triggered with direction ' + direction)\n            this.model.set('inview', {\n              state: 'enter',\n              direction: direction\n            });\n            this.onEnterHandler(direction);\n          }, this), 10);\n        }, this)\n      });\n    },\n    onExitedHandler: function (pDirection) {\n      this.model.inviewEnable(false);\n    },\n    onExitHandler: function (pDirection) {},\n    onEnteredHandler: function (pDirection) {},\n    onEnterHandler: function (pDirection) {\n      this.model.inviewEnable(true);\n    },\n    destroy: function () {\n      if (this.inview != null) this.inview.destroy();\n    }\n  });\n  window.BaseInviewView = window.BaseInviewView || BurdaInfinite.views.base.BaseInviewView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseInviewView);\n\n//# sourceURL=webpack:///./src/views/base/base-inview-view.js?");

/***/ }),

/***/ "./src/views/base/base-list-swipeable-view.js":
/*!****************************************************!*\
  !*** ./src/views/base/base-list-swipeable-view.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.base.BaseListSwipeableView = BaseView.extend({\n    $swiperContainer: [],\n    $swiperNav: [],\n    swiperApi: null,\n    isMobileMode: false,\n    swiperNavUsage: false,\n    swiperNavActive: false,\n    settings: {\n      selector: '.swipeable--horizontal',\n      slidesPerView: 'auto',\n      wrapperClass: 'swipeable__wrapper',\n      slideClass: 'swipeable__item',\n      grabCursor: true\n    },\n    initialize: function (pOptions) {\n      BaseView.prototype.initialize.call(this, pOptions); //init slide navi\n\n      this.$swiperNav = this.$el.find('.swiper-navigation');\n\n      if (this.$swiperNav.length > 0) {\n        this.swiperNavUsage = true;\n\n        _.extend(this.settings, {\n          nextButton: this.$swiperNav.find('.swiper-button-next')[0],\n          prevButton: this.$swiperNav.find('.swiper-button-prev')[0]\n        });\n      }\n\n      this.createView();\n\n      if (this.deviceModel != undefined && this.deviceModel.get('isActive')) {\n        this.onDeviceBreakpointHandler(this.deviceModel.getDeviceBreakpoints().findWhere({\n          active: true\n        }));\n        this.listenTo(this.deviceModel.getDeviceBreakpoints(), 'change:active', this.onDeviceBreakpointHandler, this);\n      }\n    },\n    createView: function () {\n      this.$swiperContainer = this.$el.find('.container-content');\n    },\n    updateViews: function () {\n      this.swiperApi = new Swiper(this.$swiperContainer[0], this.settings);\n      this.$swiperContainer.data('swiperApi', this.swiperApi);\n\n      if (this.isMobileMode) {\n        this.enableMobileMode();\n      } else {\n        this.disableMobileMode();\n      }\n    },\n    enableMobileMode: function () {\n      if (Blazy == undefined) return;\n      this.swiperApi.on('onSlideChangeStart', function (pSwiperApi) {\n        var tmpIndex = Math.min(pSwiperApi.activeIndex + 1, pSwiperApi.slides.length - 1),\n            $tmpSlide = $(pSwiperApi.slides[tmpIndex]).find('.b-lazy'),\n            $tmpSlideContainer = $(pSwiperApi.slides[tmpIndex]).find('.media--loading'),\n            tmpBlazy;\n\n        if (!$tmpSlide.hasClass('b-loaded')) {\n          tmpBlazy = new Blazy();\n          tmpBlazy.load($tmpSlide[0]);\n        }\n\n        if ($tmpSlideContainer.hasClass('media--loading')) {\n          $tmpSlideContainer.removeClass('media--loading');\n        }\n      });\n    },\n    disableMobileMode: function () {\n      if (Blazy == undefined) return;\n      this.swiperApi.off('slideChangeStart');\n    },\n    removeSwiper: function () {\n      this.swiperApi.destroy(true, true);\n      this.$swiperContainer.removeData('swiperApi');\n    },\n    onDeviceBreakpointHandler: function (pModel) {\n      this.breakpointDeviceModel = pModel;\n\n      if (pModel.id == 'smartphone' && this.isMobileMode == false) {\n        if (this.swiperNavUsage) this.swiperNavActive = true;\n        this.isMobileMode = true;\n        this.updateViews();\n      } else if (pModel.id != 'smartphone' && this.isMobileMode) {\n        if (this.swiperNavUsage) this.swiperNavActive = false;\n        this.isMobileMode = false;\n        this.removeSwiper();\n      }\n    }\n  });\n  window.BaseListSwipeableView = window.BaseListSwipeableView || BurdaInfinite.views.base.BaseListSwipeableView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseListSwipeableView);\n\n//# sourceURL=webpack:///./src/views/base/base-list-swipeable-view.js?");

/***/ }),

/***/ "./src/views/base/base-newsletter-view.js":
/*!************************************************!*\
  !*** ./src/views/base/base-newsletter-view.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.base.BaseNewsletterView = BaseView.extend({\n    events: {\n      \"submit\": \"formSubmit\"\n    },\n    useAlerts: true,\n    useAjaxPermissions: true,\n    available: false,\n    settings: null,\n    useTracking: true,\n    permissions: null,\n    $formView: null,\n    $successView: null,\n    $privacyView: null,\n    $alerts: null,\n    removeTimer: 1000,\n    removeTimerDelay: 1000,\n    initialize: function (pOptions) {\n      this.settings = _.extend({}, drupalSettings.hm_newsletter);\n      this.settings.groupId = this.$el.data('newsletter-group-id');\n      this.useAjaxPermissions = this.$el.data('use-ajax-permissions') == undefined ? true : this.$el.data('use-ajax-permissions');\n      this.$el.hide();\n      this.permissions = BaseNewsletterView.permissions;\n\n      if (this.settings.clientid == undefined || this.settings.groupId == undefined) {\n        console.warn(\"BaseNewsletterView needs settings + groupId\", this.settings.clientid, this.settings.groupId);\n        return;\n      }\n\n      BaseView.prototype.initialize.call(this, pOptions);\n      this.createView();\n      this.initializeApi();\n      this.delegateEvents();\n\n      if (!_.isNull(this.permissions)) {\n        this.ready();\n      }\n    },\n    initializeApi: function () {\n      if (_.isUndefined(window.thsixtyQ)) {\n        window.thsixtyQ = window.thsixtyQ || [];\n        window.thsixtyQ.push(['init', {\n          config: {\n            env: this.settings.env\n          }\n        }]);\n        var th = document.createElement('script');\n        th.type = 'text/javascript';\n        th.async = true;\n        th.src = \"//d2528hoa8g0iaj.cloudfront.net/thsixty.min.js\";\n        var s = document.getElementsByTagName('script')[0];\n        s.parentNode.insertBefore(th, s);\n      }\n\n      if (!this.permissions) {\n        window.thsixtyQ.push(['permissions.get', {\n          success: _.bind(function (pPermissions) {\n            //TODO remove this after prod permissions fix\n            if (pPermissions.privacy) {\n              pPermissions.datenschutzeinwilligung = pPermissions.privacy;\n            }\n\n            BaseNewsletterView.permissions = pPermissions;\n            this.permissions = pPermissions;\n            this.ready();\n          }, this),\n          error: _.bind(function (pErr) {\n            console.log(\"PERMISSIONS ERROR\", pErr);\n          }, this)\n        }]);\n      }\n    },\n    createView: function () {\n      this.$formView = this.$el.find('.container-form');\n      this.$alerts = this.$el.find('.container-alerts');\n      this.$successView = this.$el.find('.container-success');\n      this.$privacyView = this.$el.find('.container-privacy');\n    },\n    ready: function () {\n      this.$el.show();\n      this.available = true;\n\n      if (this.useAjaxPermissions) {\n        this.$formView.find('.privacy-link').unbind('click.privacy_open').bind('click.privacy_open', $.proxy(function () {\n          this.setViewState(BaseNewsletterView.STATE_PRIVACY);\n          return false;\n        }, this));\n        this.$privacyView.find('.icon-close').unbind('click.privacy_close').bind('click.privacy_close', $.proxy(function () {\n          this.setViewState(BaseNewsletterView.STATE_INITIAL);\n        }, this));\n        this.$privacyView.find('.container-content-dynamic').empty().append($(this.permissions.datenschutzeinwilligung.markup.text_body));\n      }\n    },\n    formSubmit: function (pEvent) {\n      var tmpValid = true,\n          tmpVal = \"\",\n          tmpData = {\n        client: this.settings.clientid,\n        groups: [this.settings.groupId],\n        agreements: [],\n        user: {}\n      };\n      this.removeAlerts();\n      /**\n       * collect field values\n       */\n\n      if (!this.validateFields(tmpData)) return false;\n      if (!this.validateAgreements(tmpData)) return false;\n      this.send(tmpData);\n      return false;\n    },\n    validateFields: function (pData) {\n      var tmpField = null,\n          tmpVal = '',\n          tmpValid = true;\n\n      _.each(BaseNewsletterView.fields, function (pVal, pKey) {\n        tmpField = this.formField(pKey);\n\n        if (tmpField.length) {\n          tmpVal = tmpField.val();\n          pData.user[pKey] = tmpVal;\n\n          if (tmpVal == '' && tmpField.attr('required')) {\n            this.addAlert('danger', pKey, 'Das Feld ist erforderlich.');\n            tmpValid = false;\n            return false;\n          }\n        }\n      }, this);\n\n      return tmpValid;\n    },\n    validateAgreements: function (pData) {\n      var $tmpItem = null,\n          tmpAgreementVal = '',\n          tmpValid = true;\n\n      _.each(this.$formView.find('[name=\"agreements[]\"]'), function (pItem, pIndex) {\n        $tmpItem = $(pItem);\n\n        if ($tmpItem.is(':checked')) {\n          tmpAgreementVal = $tmpItem.val();\n\n          if (tmpAgreementVal == 'datenschutzeinwilligung') {\n            pData.extra = {\n              acquia_id: $.cookie('tc_ptid')\n            };\n          }\n\n          if (this.permissions[tmpAgreementVal] !== undefined && this.permissions[tmpAgreementVal].version !== undefined) {\n            pData.agreements.push({\n              'name': tmpAgreementVal,\n              'version': this.permissions[tmpAgreementVal].version\n            });\n          }\n        } else if ($tmpItem.attr('required')) {\n          this.setValidationState($tmpItem, 'has-error');\n          this.addAlert('danger', null, 'Die Auswahl ist erforderlich.');\n          tmpValid = false;\n          return false;\n        }\n      }, this);\n\n      return tmpValid;\n    },\n    send: function (pData) {\n      window.thsixtyQ.push(['newsletter.subscribe', {\n        params: pData,\n        success: $.proxy(function () {\n          this.setViewState(BaseNewsletterView.STATE_SUCCESS);\n          this.$el.trigger('newsletter:success');\n          this.track({\n            category: 'newsletter',\n            action: 'success'\n          });\n        }, this),\n        error: $.proxy(function (err) {\n          var responseData = BaseNewsletterView.responseInterpreter(err);\n          this.addAlert('danger', responseData.field, responseData.message);\n          this.$el.trigger('newsletter:error', responseData);\n          this.track({\n            category: 'newsletter',\n            action: 'error'\n          });\n        }, this)\n      }]);\n    },\n    setViewState: function (pState) {\n      this.$el.removeClass(BaseNewsletterView.STATE_PRIVACY + ' ' + BaseNewsletterView.STATE_SUCCESS);\n\n      switch (pState) {\n        case BaseNewsletterView.STATE_SUCCESS:\n        case BaseNewsletterView.STATE_PRIVACY:\n          this.$el.addClass(pState);\n          break;\n      }\n    },\n    setValidationState: function ($pEl, pState) {\n      $pEl.parents('.form-group').addClass(pState);\n    },\n    formField: function (pName) {\n      return this.$formView.find('[name=\"' + pName + '\"]');\n    },\n    addAlert: function (pType, pField, pMessage) {\n      var $tmpItem = {};\n      if (pType == 'danger' && pField !== undefined) this.setValidationState(this.formField(pField), 'has-error');\n      if (!this.useAlerts) return;\n      $tmpItem = '<div class=\"alert alert-' + pType + '\" role=\"alert\">' + pMessage + '</div>';\n      $tmpItem = $($tmpItem).appendTo(this.$alerts);\n\n      _.delay(_.bind(function () {\n        $tmpItem.animate({\n          height: 0,\n          paddingTop: 0,\n          paddingBottom: 0\n        }, function () {\n          $(this).remove();\n        });\n      }, this), this.removeTimer + this.removeTimerDelay * $tmpItem.index());\n    },\n    removeAlerts: function () {\n      this.$alerts.empty();\n      this.$el.find('.form-group').removeClass('has-error');\n    },\n    track: function (pObject) {\n      if (typeof TrackingManager != 'undefined' && this.useTracking == true) {\n        TrackingManager.trackEvent(pObject, TrackingManager.getAdvTrackingByElement(this.$el));\n\n        if (pObject.category == 'newsletter' && pObject.action == 'success') {\n          TrackingManager.trackEvent({\n            category: 'mkt-conversion',\n            action: 'newsletterSignup',\n            eventNonInteraction: false\n          }, TrackingManager.getAdvTrackingByElement(this.$el));\n        }\n      }\n    },\n    destroy: function () {}\n  }, {\n    STATE_INITIAL: 'state-initial',\n    STATE_PRIVACY: 'state-privacy',\n    STATE_SUCCESS: 'state-success',\n    permissions: null,\n    fields: {\n      salutation: null,\n      firstname: null,\n      lastname: null,\n      postalcode: null,\n      city: null,\n      birthday: null,\n      email: null\n    },\n    responseInterpreter: function (responseData) {\n      var interpretedResponse = {\n        code: responseData.code,\n        field: null,\n        message: null\n      };\n\n      switch (responseData.code) {\n        case 'EmailCannotBeEmpty':\n          interpretedResponse.field = 'email';\n          interpretedResponse.message = 'Die E-Mail-Adresse ist erforderlich.';\n          break;\n\n        case 'InvalidEmail':\n          interpretedResponse.field = 'email';\n          interpretedResponse.message = 'Die E-Mail-Adresse muss gültig sein.';\n          break;\n\n        default:\n          interpretedResponse.message = responseData.code.replace(/([A-Z])/g, ' $1');\n          break;\n      }\n\n      return interpretedResponse;\n    }\n  });\n  window.BaseNewsletterView = window.BaseNewsletterView || BurdaInfinite.views.base.BaseNewsletterView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseNewsletterView);\n\n//# sourceURL=webpack:///./src/views/base/base-newsletter-view.js?");

/***/ }),

/***/ "./src/views/base/base-sidebar-view.js":
/*!*********************************************!*\
  !*** ./src/views/base/base-sidebar-view.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.base.BaseSidebar = Backbone.View.extend({\n    classStateOpen: \"sidebar-open\",\n    classElementOpen: \"open\",\n    events: {\n      \"click .icon-close\": function (pEvent) {\n        this.clickHandler(pEvent, 'close');\n      }\n    },\n    initialize: function (pOptions) {\n      _.extend(this, pOptions || {});\n\n      this.listenTo(this.model, \"change:is_open\", this.stateChangedHandler);\n    },\n    clickHandler: function (pEvent, pType) {\n      switch (pType) {\n        case 'close':\n          this.open(false);\n          break;\n      }\n    },\n    stateChangedHandler: function (pModel) {\n      this.open(pModel.get('is_open'));\n    },\n    open: function (pBool) {\n      this.model.set('is_open', pBool);\n      $('body').toggleClass(this.classStateOpen, pBool);\n      this.$el.toggleClass(this.classElementOpen, pBool);\n    }\n  });\n  window.BaseSidebar = window.BaseSidebar || BurdaInfinite.views.base.BaseSidebar;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseSidebar);\n\n//# sourceURL=webpack:///./src/views/base/base-sidebar-view.js?");

/***/ }),

/***/ "./src/views/base/base-view.js":
/*!*************************************!*\
  !*** ./src/views/base/base-view.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.base.BaseView = Backbone.View.extend({\n    enabled: true,\n    deviceModel: null,\n    infiniteBlockDataModel: new Backbone.Model(),\n    initialize: function (pOptions) {\n      _.extend(this, pOptions || {});\n\n      this.listenTo(this.model, \"refresh\", this.onRefreshHandler, this);\n      this.listenTo(this.model, \"elementChanged\", this.onElementChangedHandler, this);\n    },\n    delegateElements: function ($pElement) {\n      var $tmpElement = $pElement || this.$el;\n\n      if (typeof BaseUtils != \"undefined\") {\n        BurdaInfinite.utils.BaseUtils.delegateElements($tmpElement);\n      }\n    },\n    enableView: function () {\n      this.enabled = true;\n    },\n    onElementChangedHandler: function (pModel) {\n      this.$el = $(this.model.get('el')); //jQueryObject needed\n\n      this.refresh();\n    },\n    onRefreshHandler: function (pEvent) {\n      this.refresh();\n    },\n    refresh: function () {\n      this.delegateElements();\n    },\n    disableView: function () {\n      this.enabled = false;\n    },\n    destroy: function () {\n      BaseInviewView.prototype.destroy.call(this);\n    }\n  });\n  window.BaseView = window.BaseView || BurdaInfinite.views.base.BaseView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (BaseView);\n\n//# sourceURL=webpack:///./src/views/base/base-view.js?");

/***/ }),

/***/ "./src/views/gallery-view.js":
/*!***********************************!*\
  !*** ./src/views/gallery-view.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.GalleryView = BaseView.extend({\n    mediaId: null,\n    slick: null,\n    $slickElement: [],\n    initialize: function (pOptions) {\n      BaseView.prototype.initialize.call(this, pOptions);\n      this.mediaId = this.$el.data('media-id').toString();\n      this.createView();\n    },\n    createView: function () {\n      this.$slickElement = this.$el.find('.slick');\n      this.$slickElement.on('init', _.bind(this.initSlick, this));\n      this.$slickElement.on('beforeChange', _.bind(this.onBeforeChangeHandler, this));\n    },\n    initSlick: function (pEvent, pSlick, pCurrentSlide, pNextSlide) {\n      this.slick = pSlick;\n      this.$el.find('.swiper-button-prev').on('click', _.bind(function () {\n        this.slick.slickPrev();\n      }, this));\n      this.$el.find('.swiper-button-next').on('click', _.bind(function () {\n        this.slick.slickNext();\n      }, this));\n    },\n    onBeforeChangeHandler: function (pEvent, pSlick, pCurrentSlide, pNextSlide) {\n      var tmpPath = this.infiniteBlockDataModel != null && this.infiniteBlockDataModel.has('path') && this.infiniteBlockDataModel.get('path') != \"\" ? this.infiniteBlockDataModel.get('path') : Backbone.history.location.pathname;\n      this.$el.find('.text-item-count span').text(pNextSlide + 1);\n\n      if (typeof TrackingManager != 'undefined') {\n        TrackingManager.trackIVW(); //TrackingManager.trackPageView(tmpPath + '/gallery_' + this.mediaId);\n\n        TrackingManager.trackEvent({\n          category: 'click',\n          action: 'gallery',\n          label: this.mediaId,\n          location: tmpPath,\n          eventNonInteraction: false\n        });\n      }\n    }\n  });\n  window.GalleryView = window.GalleryView || BurdaInfinite.views.GalleryView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (GalleryView);\n\n//# sourceURL=webpack:///./src/views/gallery-view.js?");

/***/ }),

/***/ "./src/views/infinite-block-view.js":
/*!******************************************!*\
  !*** ./src/views/infinite-block-view.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.InfiniteBlockView = BaseDynamicView.extend({\n    initialize: function (pOptions) {\n      BaseDynamicView.prototype.initialize.call(this, pOptions);\n    }\n  });\n  window.InfiniteBlockView = window.InfiniteBlockView || BurdaInfinite.views.InfiniteBlockView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (InfiniteBlockView);\n\n//# sourceURL=webpack:///./src/views/infinite-block-view.js?");

/***/ }),

/***/ "./src/views/main-view.js":
/*!********************************!*\
  !*** ./src/views/main-view.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _backbone_manager__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../backbone-manager */ \"./src/backbone-manager.js\");\n/* harmony import */ var _consts_model_ids__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../consts/model-ids */ \"./src/consts/model-ids.js\");\n/* harmony import */ var _consts_breakpoints__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../consts/breakpoints */ \"./src/consts/breakpoints.js\");\n/* harmony import */ var _consts_manager_ids__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../consts/manager-ids */ \"./src/consts/manager-ids.js\");\n/* harmony import */ var _consts_view_ids__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../consts/view-ids */ \"./src/consts/view-ids.js\");\n/* harmony import */ var _models_base_base_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../models/base/base-model */ \"./src/models/base/base-model.js\");\n/* harmony import */ var _models_base_base_sidebar_model__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/base/base-sidebar-model */ \"./src/models/base/base-sidebar-model.js\");\n/* harmony import */ var _models_base_base_collection_model__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../models/base/base-collection-model */ \"./src/models/base/base-collection-model.js\");\n/* harmony import */ var _models_base_base_dynamic_view_model__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../models/base/base-dynamic-view-model */ \"./src/models/base/base-dynamic-view-model.js\");\n/* harmony import */ var _models_ajax_model__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../models/ajax-model */ \"./src/models/ajax-model.js\");\n/* harmony import */ var _models_device_model__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../models/device-model */ \"./src/models/device-model.js\");\n/* harmony import */ var _models_infinite_block_data_model__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../models/infinite-block-data-model */ \"./src/models/infinite-block-data-model.js\");\n/* harmony import */ var _models_modal_search_model__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../models/modal-search-model */ \"./src/models/modal-search-model.js\");\n/* harmony import */ var _models_page_offsets_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../models/page-offsets-model */ \"./src/models/page-offsets-model.js\");\n/* harmony import */ var _models_sidebar_model__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../models/sidebar-model */ \"./src/models/sidebar-model.js\");\n/* harmony import */ var _managers_marketing_manager__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../managers/marketing-manager */ \"./src/managers/marketing-manager.js\");\n/* harmony import */ var _managers_tracking_manager__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../managers/tracking-manager */ \"./src/managers/tracking-manager.js\");\n/* harmony import */ var _managers_scroll_manager__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../managers/scroll-manager */ \"./src/managers/scroll-manager.js\");\n/* harmony import */ var _utils_base_utils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../utils/base-utils */ \"./src/utils/base-utils.js\");\n/* harmony import */ var _views_base_base_view__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../views/base/base-view */ \"./src/views/base/base-view.js\");\n/* harmony import */ var _views_base_base_dynamic_view__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../views/base/base-dynamic-view */ \"./src/views/base/base-dynamic-view.js\");\n/* harmony import */ var _views_base_base_feed_view__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../views/base/base-feed-view */ \"./src/views/base/base-feed-view.js\");\n/* harmony import */ var _views_base_base_inview_view__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../views/base/base-inview-view */ \"./src/views/base/base-inview-view.js\");\n/* harmony import */ var _views_base_base_list_swipeable_view__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ../views/base/base-list-swipeable-view */ \"./src/views/base/base-list-swipeable-view.js\");\n/* harmony import */ var _views_base_base_newsletter_view__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ../views/base/base-newsletter-view */ \"./src/views/base/base-newsletter-view.js\");\n/* harmony import */ var _views_base_base_sidebar_view__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ../views/base/base-sidebar-view */ \"./src/views/base/base-sidebar-view.js\");\n/* harmony import */ var _views_anchor_navigation_view__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ../views/anchor-navigation-view */ \"./src/views/anchor-navigation-view.js\");\n/* harmony import */ var _views_article_view__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ../views/article-view */ \"./src/views/article-view.js\");\n/* harmony import */ var _views_gallery_view__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ../views/gallery-view */ \"./src/views/gallery-view.js\");\n/* harmony import */ var _views_infinite_block_view__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ../views/infinite-block-view */ \"./src/views/infinite-block-view.js\");\n/* harmony import */ var _views_marketing_view__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ../views/marketing-view */ \"./src/views/marketing-view.js\");\n/* harmony import */ var _views_menu_main_view__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ../views/menu-main-view */ \"./src/views/menu-main-view.js\");\n/* harmony import */ var _views_menu_sidebar_view__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../views/menu-sidebar-view */ \"./src/views/menu-sidebar-view.js\");\n/* harmony import */ var _views_modal_search_view__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../views/modal-search-view */ \"./src/views/modal-search-view.js\");\n/* harmony import */ var _views_sticky_view__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../views/sticky-view */ \"./src/views/sticky-view.js\");\n/* harmony import */ var _views_teaser_feed_view__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../views/teaser-feed-view */ \"./src/views/teaser-feed-view.js\");\n/* harmony import */ var _views_newsletter_hmnewsletter_view__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../views/newsletter/hmnewsletter-view */ \"./src/views/newsletter/hmnewsletter-view.js\");\n/* harmony import */ var _views_products_ecommerce_slider_view__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../views/products/ecommerce-slider-view */ \"./src/views/products/ecommerce-slider-view.js\");\n/* harmony import */ var _views_products_look_view__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../views/products/look-view */ \"./src/views/products/look-view.js\");\n/* harmony import */ var _views_products_product_look_view__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../views/products/product-look-view */ \"./src/views/products/product-look-view.js\");\n/* harmony import */ var _views_products_product_slider_view__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../views/products/product-slider-view */ \"./src/views/products/product-slider-view.js\");\n/* harmony import */ var _views_products_product_view__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../views/products/product-view */ \"./src/views/products/product-view.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite, AppConfig) {\n  BurdaInfinite.views.MainView = Backbone.View.extend({\n    menuSidebarModel: {},\n    modalSearchModel: {},\n    pageOffsetsModel: {},\n    infiniteViewsModel: {},\n    deviceModel: {},\n    menuMainView: {},\n    menuSidebarView: {},\n    infiniteView: {},\n    modalSearchView: {},\n    events: {},\n\n    initialize(pOptions) {\n      _.extend(this, pOptions); // if ($.cookie != undefined) $.cookie.json = true;\n\n\n      if ($.timeago != undefined) $.timeago.settings.localeTitle = true;\n      if (_.isFunction(history.pushState)) Backbone.history.start({\n        pushState: true\n      });\n      AppConfig.initialLocation = Backbone.history.location.pathname + Backbone.history.location.search; // TFM.Debug.start();\n\n      this.initBeforeUnloadBehavior();\n      this.createModels();\n      this.createManagers();\n      this.createViews(); // console.log(\"UUID\", this.deviceModel.get('uuid'));\n\n      /**\n       * Blazy Viewport fix\n       *\n       * Sometimes in safari browser on a page reload (especially when reloading through browser reload button)\n       * images that are initially present in the viewport are not loaded by blazy. This snippet is a workaround\n       * for this bug.\n       */\n\n      if (typeof jQuery.browser !== 'undefined' && jQuery.browser.safari && typeof Blazy !== 'undefined') {\n        _.delay(() => {\n          let tmpBlazy = new Blazy();\n          tmpBlazy.revalidate();\n        }, 100);\n      }\n      /**\n       * Infinite Model Helper\n       */\n      // TODO use for debugging\n      // this.listenTo(this.infiniteViewsModel, 'update', _.debounce(function (pType) {\n      //    console.info(\"global infiniteModel\", this.infiniteViewsModel);\n      // }, 100, true), this);\n\n      /**\n       * adjust sidebar if toolbar activated / displayed\n       */\n\n\n      setTimeout(_(function () {\n        if (typeof Drupal.toolbar !== 'undefined' && typeof Drupal.toolbar.models.toolbarModel !== 'undefined') {\n          Backbone.listenTo(Drupal.toolbar.models.toolbarModel, 'change:offsets', _(this.onToolbarHandler).bind(this));\n        }\n      }).bind(this));\n    },\n\n    initBeforeUnloadBehavior() {\n      /**\n       * fix the page reload problems\n       */\n      if ($('body').hasClass('page-article')) {\n        window.allowBeforeUnload = true;\n\n        window.onbeforeunload = function (pEvent) {\n          if (!window.allowBeforeUnload) return;\n          Waypoint.disableAll();\n          $('body').css({\n            top: `${$(window).scrollTop() * -1}px`,\n            left: `${$(window).scrollLeft() * -1}px`\n          });\n          window.scrollTo(0, 0);\n        };\n      }\n    },\n\n    createModels() {\n      this.menuSidebarModel = new _models_base_base_sidebar_model__WEBPACK_IMPORTED_MODULE_6__[\"default\"]();\n      this.infiniteViewsModel = new _models_base_base_collection_model__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\n      this.modalSearchModel = new _models_modal_search_model__WEBPACK_IMPORTED_MODULE_12__[\"default\"]();\n      this.pageOffsetsModel = new _models_page_offsets_model__WEBPACK_IMPORTED_MODULE_13__[\"default\"]();\n      this.deviceModel = new _models_device_model__WEBPACK_IMPORTED_MODULE_10__[\"default\"]({}, _.extend(JSON.parse(this.$el.find('[data-breakpoint-settings]').text())));\n      /**\n       * Backbone Manager - push Models\n       */\n\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].menuSidebarModel, this.menuSidebarModel);\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].infiniteViewsModel, this.infiniteViewsModel);\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].modalSearchModel, this.modalSearchModel);\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].pageOffsetsModel, this.pageOffsetsModel);\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_1__[\"default\"].deviceModel, this.deviceModel);\n    },\n\n    createManagers() {\n      new _managers_marketing_manager__WEBPACK_IMPORTED_MODULE_15__[\"default\"]({\n        infiniteViewsModel: this.infiniteViewsModel\n      });\n      /**\n       * TrackingManager\n       */\n\n      new _managers_tracking_manager__WEBPACK_IMPORTED_MODULE_16__[\"default\"]({\n        id: _consts_manager_ids__WEBPACK_IMPORTED_MODULE_3__[\"default\"].trackingManager,\n        el: this.$el,\n        infiniteViewsModel: this.infiniteViewsModel,\n        model: new Backbone.Model({\n          initialLocation: AppConfig.initialLocation,\n          gtmEventName: AppConfig.gtmEventName,\n          gtmIndexEvent: AppConfig.gtmIndexEvent,\n          gtmIndexPosEvent: AppConfig.gtmIndexPosEvent\n        })\n      });\n      /**\n       * ScrollManager\n       */\n\n      new _managers_scroll_manager__WEBPACK_IMPORTED_MODULE_17__[\"default\"]({\n        id: _consts_manager_ids__WEBPACK_IMPORTED_MODULE_3__[\"default\"].scrollManager,\n        el: this.$el,\n        infiniteViewsModel: this.infiniteViewsModel,\n        model: new Backbone.Model({\n          initialLocation: AppConfig.initialLocation\n        })\n      });\n    },\n\n    createViews() {\n      /**\n       * InfiniteView - parse and create views by data-view-type\n       * IMPORTANT - Needed for the initial parsing\n       */\n      this.infiniteView = new _views_base_base_dynamic_view__WEBPACK_IMPORTED_MODULE_20__[\"default\"]({\n        id: _consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].infiniteView,\n        el: this.$el,\n        model: this.infiniteViewsModel,\n        deviceModel: this.deviceModel,\n        initialCall: true\n      });\n      this.infiniteView.delegateElements();\n      /** * */\n\n      /**\n       * MainMenuView\n       */\n\n      this.menuMainView = new _views_menu_main_view__WEBPACK_IMPORTED_MODULE_31__[\"default\"]({\n        id: _consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].menuMainView,\n        el: $('#menu-main-navigation', this.$el)\n      });\n      /**\n       * MenuSidebarView\n       */\n\n      this.menuSidebarView = new _views_menu_sidebar_view__WEBPACK_IMPORTED_MODULE_32__[\"default\"]({\n        id: _consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].menuSidebarView,\n        el: $('#menu-sidebar', this.$el),\n        model: this.menuSidebarModel\n      });\n      /**\n       * ModalSearchView\n       */\n\n      this.modalSearchView = new _views_modal_search_view__WEBPACK_IMPORTED_MODULE_33__[\"default\"]({\n        id: _consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].modalSearchView,\n        el: this.$el.find('#modal-search'),\n        model: this.modalSearchModel,\n        infiniteModel: this.infiniteViewsModel\n      });\n      /**\n       * Backbone Manager - push Views\n       */\n\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseView(_consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].menuMainView, this.menuMainView);\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseView(_consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].menuSidebarView, this.menuSidebarView);\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseView(_consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].infiniteView, this.infiniteView);\n      _backbone_manager__WEBPACK_IMPORTED_MODULE_0__[\"default\"].reuseView(_consts_view_ids__WEBPACK_IMPORTED_MODULE_4__[\"default\"].modalSearchView, this.modalSearchView);\n    },\n\n    onToolbarHandler(pModel, pAttr) {\n      // pModel.set('orientation', 'horizontal');\n      this.pageOffsetsModel.add({\n        id: 'offsetToolbar',\n        offsets: pAttr,\n        pageRelevant: true\n      });\n    }\n\n  });\n  window.MainView = window.MainView || BurdaInfinite.views.MainView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite, AppConfig);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MainView);\n\n//# sourceURL=webpack:///./src/views/main-view.js?");

/***/ }),

/***/ "./src/views/marketing-view.js":
/*!*************************************!*\
  !*** ./src/views/marketing-view.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.MarketingView = BaseView.extend({\n    adType: \"\",\n    adEntityType: \"\",\n    adContainerType: \"\",\n    currentBreakpoint: \"\",\n    adRenderModel: null,\n    breakpointDeviceModel: {},\n    $adSlotContainer: [],\n    $adTechAd: [],\n    $adEntityContainer: [],\n    height: 0,\n    visible: false,\n    enabled: null,\n    fbaIsFilled: false,\n    targeting: null,\n    initialize: function (pOptions) {\n      BaseView.prototype.initialize.call(this, pOptions);\n      this.$adSlotContainer = this.$el.find(\".item-marketing\");\n      this.checkContainerType();\n      this.breakpointDeviceModel = this.deviceModel.getDeviceBreakpoints().findWhere({\n        active: true\n      });\n      this.currentBreakpoint = this.breakpointDeviceModel.id;\n      this.listenTo(this.deviceModel.getDeviceBreakpoints(), 'change:active', this.onDeviceBreakpointHandler, this);\n      this.listenTo(this.model, 'change:inviewEnabled', this.onEnabledHandler, this);\n    },\n    updateView: function () {\n      this.removeFixHeight();\n\n      if (this.adRenderModel.visibility == \"visible\") {\n        this.show();\n      } else {\n        this.hide();\n      }\n    },\n    checkContainerType: function () {\n      // TODO: this doesn't return the data, just the element containing it.\n      // This also means, that the second to last condition will always fail\n      this.adEntityType = this.$el.find('[data-atf-format]');\n\n      if (this.$el.hasClass('container-sidebar-content')) {\n        this.adContainerType = MarketingView.CONTAINER_TYPE_SIDEBAR;\n      } else if (this.$el.hasClass('region-full-content') && this.adEntityType == MarketingView.AD_ENTITY_TYPE_LEADERBOARD) {\n        this.adContainerType = MarketingView.CONTAINER_TYPE_LEADERBOARD;\n      } else if (this.$el.hasClass('region-full-content') && this.adEntityType == MarketingView.AD_ENTITY_TYPE_SPECIAL) {\n        this.adContainerType = MarketingView.CONTAINER_TYPE_SPECIAL;\n      } else if (this.$el.hasClass('ad-content') && this.adEntityType == MarketingView.AD_ENTITY_TYPE_SPECIAL) {\n        this.adContainerType = MarketingView.CONTAINER_TYPE_SPECIAL;\n      }\n    },\n    updateEnableView: function () {\n      /**\n       * No atf_ad_rendered fired / only enabled\n       */\n      if (this.adRenderModel == null) return;\n\n      if (this.adRenderModel.visibility == \"visible\" && this.enabled) {\n        this.show();\n      } else if (this.adType != MarketingView.AD_TYPE_FBSA && this.adType != MarketingView.AD_TYPE_INREAD && this.adContainerType != MarketingView.CONTAINER_TYPE_SIDEBAR) {\n        this.freeze();\n      }\n    },\n    enableView: function () {\n      if (this.enabled) return;\n      this.enabled = true;\n      this.updateEnableView();\n    },\n    disableView: function () {\n      if (!this.enabled) return;\n      this.enabled = false;\n      this.updateEnableView();\n    },\n    onEnabledHandler: function (pModel) {\n      if (pModel != this.model) return; //event bubbling\n\n      if (pModel.get('inviewEnabled') == true) {\n        this.enableView();\n      } else {\n        this.disableView();\n      }\n    },\n    checkHeight: function () {\n      if (this.height != this.$adSlotContainer.height()) {\n        this.height = this.$adSlotContainer.height();\n        this.model.set('contentHeight', this.height);\n      }\n    },\n    onDeviceBreakpointHandler: function (pModel) {\n      this.breakpointDeviceModel = pModel;\n      this.currentBreakpoint = this.breakpointDeviceModel.id;\n      if (!this.isAllowedToWrite()) return;\n      this.hide();\n    },\n    isAllowedToWrite: function () {\n      if (this.adType == MarketingView.AD_TYPE_FBSA || this.adType == MarketingView.AD_TYPE_INREAD) {\n        return false;\n      }\n\n      return this.enabled;\n    },\n    isActive: function () {\n      if (this.adContainerType == MarketingView.CONTAINER_TYPE_SIDEBAR && this.currentBreakpoint != \"desktop\") {\n        return false;\n      }\n\n      return this.enabled;\n    },\n    show: function () {\n      this.$el.removeClass('ad-inactive').addClass('ad-active');\n      this.checkHeight();\n      this.visible = true;\n    },\n    hide: function () {\n      this.$el.removeClass('ad-active ad-fba').addClass('ad-inactive');\n      this.adType = \"\";\n      this.clear();\n      this.removeFixHeight();\n      this.visible = false;\n    },\n    freeze: function () {\n      this.setFixHeight(this.getAdEntityContainer().height());\n      this.clear();\n    },\n    clear: function () {\n      if (this.adType == MarketingView.AD_TYPE_FBSA && this.fbaIsFilled) {\n        window.ftNuke();\n        this.fbaIsFilled = false;\n      } else if (this.getAdTechAd().length > 0) {\n        this.getAdTechAd().empty();\n      }\n    },\n    setFixHeight: function (pHeight) {\n      this.getAdEntityContainer().css('height', pHeight);\n    },\n    removeFixHeight: function () {\n      if (this.getAdEntityContainer().prop(\"style\") && this.getAdEntityContainer().prop(\"style\")[\"height\"] !== '') {\n        this.getAdEntityContainer().css('height', 'auto');\n      }\n    },\n    getAdEntityContainer: function () {\n      if (this.$adEntityContainer.length <= 0) {\n        this.$adEntityContainer = this.$el.find('.ad-entity-container');\n      }\n\n      return this.$adEntityContainer;\n    },\n    getAdTechAd: function () {\n      if (this.$adTechAd.length <= 0) {\n        this.$adTechAd = this.$el.find('.adtech-factory-ad');\n      }\n\n      return this.$adTechAd;\n    },\n    getTargeting: function () {\n      var tmpTargeting = this.getAdEntityContainer().attr('data-ad-entity-targeting') || {};\n      return JSON.parse(tmpTargeting);\n    },\n    getAdContainerType: function () {\n      return this.adContainerType;\n    },\n    setRenderedAdType: function (pAdType, pElement) {\n      this.adType = pAdType;\n\n      if (pAdType == MarketingView.AD_TYPE_FBSA) {\n        this.$el.addClass('ad-' + MarketingView.AD_TYPE_FBSA);\n        this.fbaIsFilled = true;\n\n        if (pElement != undefined) {\n          pElement.contentWindow.addEventListener(\"DOMContentLoaded\", _.bind(function (pTest) {\n            this.checkHeight();\n          }, this));\n        }\n      }\n\n      console.log(\"setRenderedAdType\", this.adType);\n    },\n    setRenderModel: function (pAdModel) {\n      this.adRenderModel = pAdModel;\n      this.updateView();\n    }\n  }, {\n    CONTAINER_TYPE_SIDEBAR: \"CONTAINER_TYPE_SIDEBAR\",\n    CONTAINER_TYPE_SPECIAL: \"CONTAINER_TYPE_SPECIAL\",\n    CONTAINER_TYPE_LEADERBOARD: \"CONTAINER_TYPE_LEADERBOARD\",\n    AD_ENTITY_TYPE_LEADERBOARD: \"AD_ENTITY_TYPE_LEADERBOARD\",\n    AD_ENTITY_TYPE_SPECIAL: \"AD_ENTITY_TYPE_SPECIAL\",\n    AD_TYPE_FBSA: \"fba\",\n    AD_TYPE_INREAD: \"inread\"\n  });\n  window.MarketingView = window.MarketingView || BurdaInfinite.views.MarketingView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MarketingView);\n\n//# sourceURL=webpack:///./src/views/marketing-view.js?");

/***/ }),

/***/ "./src/views/menu-main-view.js":
/*!*************************************!*\
  !*** ./src/views/menu-main-view.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consts_model_ids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts/model-ids */ \"./src/consts/model-ids.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.MenuMainView = Backbone.View.extend({\n    events: {\n      \"click #menu-open-btn\": function (pEvent) {\n        this.clickHandler(pEvent, 'toggle-sidebar');\n      },\n      \"click #search-open-btn\": function (pEvent) {\n        this.clickHandler(pEvent, 'search-open');\n      }\n    },\n    $subMenu: {},\n    offsetTop: 0,\n    pageOffsetsModel: {},\n    modalSearchModel: {},\n    menuSidebarModel: {},\n    deviceModel: null,\n    breakpointDeviceModel: null,\n    isMobileMode: false,\n    initialize: function (pOptions) {\n      _.defaults(this, pOptions || {});\n\n      this.pageOffsetsModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pageOffsetsModel);\n      this.modalSearchModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].modalSearchModel);\n      this.menuSidebarModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].menuSidebarModel);\n      this.deviceModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].deviceModel);\n      this.delegateEvents();\n      this.createViews();\n      this.createByContext(); //_.delay(_.bind(this.createByContext, this), 10);\n\n      if (this.deviceModel != undefined && this.deviceModel.get('isActive')) {\n        this.listenTo(this.deviceModel.getDeviceBreakpoints(), 'change:active', this.onDeviceBreakpointHandler, this); //shitty drupal 8 js-menu-active\n\n        _.delay(_.bind(function () {\n          this.onDeviceBreakpointHandler(this.deviceModel.getDeviceBreakpoints().findWhere({\n            active: true\n          }));\n        }, this), 20);\n      }\n\n      this.listenTo(this.pageOffsetsModel.getModel('offsetToolbar'), 'change', this.onToolbarHandler, this);\n      this.listenTo(this.modalSearchModel, 'change:is_open', function (pModel) {\n        this.onModalSearchHandler(pModel, 'is_open');\n      }, this);\n      this.listenTo(this.modalSearchModel, 'sync', function (pModel) {\n        this.onModalSearchHandler(pModel, 'sync');\n      }, this);\n    },\n    createViews: function () {\n      this.$subMenu = $('#menu-submenu-navigation');\n    },\n    createByContext: function (pSettings) {\n      var tmpSettings = _.extend({\n        context: $(window)[0],\n        element: this.$el,\n        handler: _.bind(this.onStickyHandler, this),\n        offset: _.bind(function () {\n          return this.offsetTop;\n        }, this)\n      }, pSettings);\n\n      if (this.sticky !== undefined) {\n        this.clearStickiness();\n      }\n\n      this.sticky = new Waypoint.Sticky(tmpSettings);\n    },\n    onStickyHandler: function () {\n      if (this.$el.hasClass('stuck')) {\n        this.$el.css('top', this.offsetTop);\n        this.activateOffset();\n      } else {\n        this.$el.css('top', '');\n        this.deactivateOffset();\n      }\n    },\n    onToolbarHandler: function (pModel) {\n      this.offsetTop = pModel.get('offsets').top;\n      this.sticky.waypoint.context.refresh();\n      this.onStickyHandler();\n    },\n    onModalSearchHandler: function (pModel, pType) {\n      var tmpIsOpen = pModel.get('is_open'),\n          tmpSettings = {};\n      /**\n       * Destroy on modal open\n       * Create and show by search sync\n       * Create by modal close\n       */\n\n      if (pType == 'is_open') {\n        if (tmpIsOpen) {\n          this.clearStickiness();\n        } else {\n          this.$el.css('top', '');\n          this.createByContext(tmpSettings);\n        }\n      } else if ('sync') {\n        tmpSettings.context = BM.reuseView(ViewIds.modalSearchView).$el;\n        tmpSettings.offset = 2500;\n        this.createByContext(tmpSettings);\n      }\n    },\n    clickHandler: function (pEvent, pType) {\n      if (pType == 'toggle-sidebar') {\n        this.menuSidebarModel.toggleOpenState();\n      } else if ('search-open') {\n        if (!this.modalSearchModel.get('is_open')) {\n          this.modalSearchModel.set('is_open', true);\n        }\n      }\n    },\n    clearStickiness: function () {\n      this.sticky.destroy();\n      this.onStickyHandler();\n    },\n    activateOffset: function () {\n      this.pageOffsetsModel.add(this.getOffsetManagerModel());\n    },\n    deactivateOffset: function () {\n      this.pageOffsetsModel.deactivate(this.getOffsetManagerModel());\n    },\n    getOffsetManagerModel: function () {\n      var tmpPosition = this.$el.position(),\n          tmpElementHeight = this.$el.outerHeight(true);\n      return {\n        id: 'offsetMenuMain',\n        pageRelevant: true,\n        $el: this.$el,\n        offsets: {\n          top: tmpPosition.top,\n          left: 0,\n          right: 0,\n          bottom: tmpPosition.top + tmpElementHeight,\n          height: tmpElementHeight\n        }\n      };\n    },\n    bindMobileListener: function () {\n      var $tmpActiveItem = this.$subMenu.find('.is-active');\n      $tmpActiveItem.off('click').on('click', $.proxy(function (pEvent) {\n        pEvent.preventDefault();\n        this.$subMenu.toggleClass('is-open', '');\n        return false;\n      }, this));\n    },\n    unbindMobileListener: function () {\n      var $tmpActiveItem = this.$subMenu.find('.is-active');\n      this.$subMenu.removeClass('is-open');\n      $tmpActiveItem.off('click');\n    },\n    onDeviceBreakpointHandler: function (pModel) {\n      this.breakpointDeviceModel = pModel;\n\n      if (pModel.id == 'smartphone' && this.isMobileMode == false) {\n        this.isMobileMode = true;\n        this.bindMobileListener();\n      } else if (pModel.id != 'smartphone' && this.isMobileMode) {\n        this.isMobileMode = false;\n        this.unbindMobileListener();\n      }\n    }\n  });\n  window.MenuMainView = window.MenuMainView || BurdaInfinite.views.MenuMainView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MenuMainView);\n\n//# sourceURL=webpack:///./src/views/menu-main-view.js?");

/***/ }),

/***/ "./src/views/menu-sidebar-view.js":
/*!****************************************!*\
  !*** ./src/views/menu-sidebar-view.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consts_model_ids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts/model-ids */ \"./src/consts/model-ids.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.MenuSidebarView = BaseSidebar.extend({\n    pageOffsetsModel: {},\n    initialize: function (pOptions) {\n      BaseSidebar.prototype.initialize.call(this, pOptions);\n      this.pageOffsetsModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pageOffsetsModel);\n      this.listenTo(this.pageOffsetsModel.getModel(\"offsetToolbar\"), 'change', this.adjustPlacement, this);\n      this.listenTo(this.model, 'change:is_open', this.onStateHandler, this);\n    },\n    adjustPlacement: function (pModel) {\n      this.$el.css('padding-top', pModel.get('offsets').top);\n    },\n    onStateHandler: function () {\n      var tmpIsOpen = this.model.get('is_open'),\n          $tmpBody = $('body'),\n          tmpTop = 0,\n          tmpLeft = 0;\n\n      if (tmpIsOpen) {\n        Waypoint.disableAll();\n        $tmpBody.css({\n          top: $(window).scrollTop() * -1 + 'px',\n          left: $(window).scrollLeft() * -1 + 'px'\n        }).addClass('no-scroll');\n      } else {\n        tmpTop = parseInt($tmpBody.css('top'), 10);\n        tmpLeft = parseInt($tmpBody.css('left'), 10);\n        $tmpBody.css({\n          top: ''\n        }).removeClass('no-scroll');\n        window.scrollTo(tmpLeft * -1, tmpTop * -1);\n        Waypoint.enableAll();\n        $(window).trigger('resize');\n      }\n    }\n  });\n  window.MenuSidebarView = window.MenuSidebarView || BurdaInfinite.views.MenuSidebarView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (MenuSidebarView);\n\n//# sourceURL=webpack:///./src/views/menu-sidebar-view.js?");

/***/ }),

/***/ "./src/views/modal-search-view.js":
/*!****************************************!*\
  !*** ./src/views/modal-search-view.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consts_model_ids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts/model-ids */ \"./src/consts/model-ids.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.ModalSearchView = BaseView.extend({\n    id: 'modal-search',\n    events: {\n      \"keyup #modal-search-input\": \"onInputChangeHandler\",\n      \"click .close\": \"close\"\n    },\n    offsetsPageModel: {},\n    offsetMenuMainModel: {},\n    pageOffsetsModel: {},\n    feedModel: {},\n    feedView: {},\n    $feed: {},\n    $searchInputField: {},\n    isSearchEnabled: false,\n    initialize: function (pOptions) {\n      BaseView.prototype.initialize.call(this, pOptions);\n      this.delegateEvents();\n      this.createView();\n      this.pageOffsetsModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pageOffsetsModel);\n      this.offsetsPageModel = this.pageOffsetsModel.getModel('offsetPage');\n      this.offsetMenuMainModel = this.pageOffsetsModel.getModel('offsetMenuMain');\n      this.feedModel = this.$feed.data('infiniteModel');\n      this.feedView = this.feedModel.get('view');\n      this.listenTo(this.offsetMenuMainModel, 'change:offsets change:active', this.onOffsetHandler, this);\n      this.listenTo(this.model, 'change:is_open', this.onStateHandler, this);\n      this.listenTo(this.model, 'request', this.clearFeed, this);\n      this.listenTo(this.model, 'sync', this.renderFeed, this);\n      this.listenTo(this.model, 'change:isUserSearching', this.onUserIsSearching, this);\n    },\n    createView: function () {\n      this.$feed = $('#feed-modal-search', this.$el);\n      this.$searchInputField = this.$el.find('#modal-search-input');\n    },\n    onOffsetHandler: function () {\n      if (this.offsetMenuMainModel.get('active') === true) {\n        this.$el.css('padding-top', this.offsetMenuMainModel.get('offsets').height);\n      } else {\n        this.$el.css('padding-top', '');\n      }\n    },\n    clearFeed: function () {\n      this.model.reset();\n      this.feedModel.reset(true);\n    },\n    renderFeed: function (pModel) {\n      var $tmpElement = this.model.at(0).get('el');\n      $tmpElement.fadeTo(0, 0);\n      $tmpElement.stop().delay(350).fadeTo(350, 1);\n      this.preloader.hide(true, true);\n      this.feedView.appendElement($tmpElement);\n      this.feedView.appendCallback($tmpElement);\n      this.activateScrollBehavior();\n      Drupal.behaviors.burdaInfinite.initBlazyOnContainer('#modal-search');\n    },\n    onInputChangeHandler: function (pEvent) {\n      var tmpStringLength = this.$searchInputField.val().length,\n          tmpMinCharLength = parseInt(this.$searchInputField.data('min-char-length'));\n      this.model.set({\n        isUserSearching: true\n      });\n\n      if (tmpStringLength >= tmpMinCharLength && this.isSearchEnabled == false) {\n        this.isSearchEnabled = true;\n        this.$el.toggleClass('is_search_enabled', this.isSearchEnabled);\n      } else if (tmpStringLength < tmpMinCharLength) {\n        this.isSearchEnabled = false;\n        this.$el.toggleClass('is_search_enabled', this.isSearchEnabled);\n      }\n\n      this.$el.find('.message-char-length .char-count').text(Math.max(0, tmpMinCharLength - tmpStringLength));\n      this.$el.toggleClass('is_info_char', tmpStringLength > 0 && tmpStringLength < tmpMinCharLength);\n    },\n    onStateHandler: function (pModel, pIsOpen) {\n      if (pIsOpen) {\n        this.onOpenHandler();\n      } else {\n        this.onCloseHandler();\n      }\n    },\n    onOpenHandler: function () {\n      this.enableBindings();\n      this.$el.modal('show');\n      setTimeout($.proxy(function () {\n        this.$searchInputField.trigger('focus');\n      }, this), 350);\n      this.model.set({\n        isUserSearching: true\n      });\n    },\n    onCloseHandler: function () {\n      this.disableBindings();\n      this.activateScrollBehavior();\n      this.$el.modal('hide');\n      this.$searchInputField.focusout();\n      setTimeout($.proxy(function () {\n        this.clear();\n        this.model.set({\n          isUserSearching: false\n        });\n      }, this), 350);\n    },\n    onKeyHandler: function (pEvent) {\n      switch (pEvent.which) {\n        case 27:\n          this.close();\n          break;\n\n        case 13:\n          if (this.isSearchEnabled) this.search();\n          break;\n      }\n    },\n    onUserIsSearching: function () {\n      var isUserSearching = this.model.get('isUserSearching');\n      var className = 'is-user-searching';\n\n      if (isUserSearching) {\n        this.$el.addClass(className);\n      } else {\n        this.$el.removeClass(className);\n      }\n    },\n    activateScrollBehavior: function () {\n      this.deactivateScrollBehavior();\n      $(\"#search-open-btn\").on('click', $.proxy(this.scrollToInput, this));\n    },\n    deactivateScrollBehavior: function () {\n      $(\"#search-open-btn\").on('off', this.scrollToInput, this);\n    },\n    enableBindings: function () {\n      this.disableBindings();\n      $(window).on('keyup', $.proxy(this.onKeyHandler, this));\n    },\n    disableBindings: function () {\n      $(window).off('keyup', this.onKeyHandler, this);\n    },\n    search: function (pVal) {\n      var tmpSearchString = pVal || this.$searchInputField.val();\n      if (this.preloader != undefined) this.preloader.destroy();\n      this.preloader = new BurdaInfinite.views.SpinnerCubeView({\n        el: this.$el\n      });\n      this.model.fetch(tmpSearchString);\n      this.model.set({\n        isUserSearching: false\n      });\n    },\n    scrollToInput: function () {\n      this.$el.animate({\n        scrollTop: this.$searchInputField.offset().top\n      }, {\n        duration: 'slow',\n        complete: $.proxy(function () {\n          this.$searchInputField.trigger('focus');\n        }, this)\n      });\n    },\n    clear: function () {\n      this.clearFeed();\n      this.$searchInputField.val('');\n      this.onInputChangeHandler();\n    },\n    close: function () {\n      this.model.set('is_open', false);\n    }\n  });\n  window.ModalSearchView = window.ModalSearchView || BurdaInfinite.views.ModalSearchView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ModalSearchView);\n\n//# sourceURL=webpack:///./src/views/modal-search-view.js?");

/***/ }),

/***/ "./src/views/newsletter/hmnewsletter-view.js":
/*!***************************************************!*\
  !*** ./src/views/newsletter/hmnewsletter-view.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.newsletter.HmNewsletterView = BaseView.extend({\n    initialize: function (pOptions) {\n      Drupal.behaviors.hmNewsletter.attach(pOptions.el.context);\n      pOptions.el.on('newsletter:success', function (event) {\n        if (typeof TrackingManager != 'undefined') {\n          TrackingManager.trackEvent({\n            category: 'newsletter',\n            action: 'success',\n            eventNonInteraction: false\n          }, TrackingManager.getAdvTrackingByElement(this.$el));\n        }\n      });\n      pOptions.el.on('newsletter:error', function (event) {\n        if (typeof TrackingManager != 'undefined') {\n          TrackingManager.trackEvent({\n            category: 'newsletter',\n            action: 'error',\n            eventNonInteraction: false\n          }, TrackingManager.getAdvTrackingByElement(this.$el));\n        }\n      });\n    }\n  });\n  window.HmNewsletterView = window.HmNewsletterView || BurdaInfinite.views.newsletter.HmNewsletterView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (HmNewsletterView);\n\n//# sourceURL=webpack:///./src/views/newsletter/hmnewsletter-view.js?");

/***/ }),

/***/ "./src/views/products/ecommerce-slider-view.js":
/*!*****************************************************!*\
  !*** ./src/views/products/ecommerce-slider-view.js ***!
  \*****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.products.EcommerceSliderView = BaseDynamicView.extend({\n    $swiperContainer: [],\n    swiperApi: null,\n    settings: {\n      loop: true,\n      slidesPerView: 'auto',\n      grabCursor: true,\n      watchSlidesVisibility: true,\n      preloadImages: false,\n      lazy: {\n        loadOnTransitionStart: true\n      }\n    },\n    initialize: function (pOptions) {\n      BaseDynamicView.prototype.initialize.call(this, pOptions);\n      this.createView();\n      this.updateView();\n      this.delegateInview();\n      this.duplicateElementClick();\n    },\n    createView: function () {\n      this.$swiperContainer = this.$el.find('.swiper-container');\n\n      _.extend(this.settings, {\n        navigation: {\n          nextEl: this.$el.find('.swiper-button-next')[0],\n          prevEl: this.$el.find('.swiper-button-prev')[0]\n        }\n      });\n\n      if (this.$el.attr('data-slider') !== 'undefined') {\n        var $dataSlider = JSON.parse(this.$el.attr('data-slider'));\n\n        _.extend(this.settings, $dataSlider);\n      }\n    },\n    updateView: function () {\n      this.swiperApi = new Swiper(this.$swiperContainer[0], this.settings);\n      this.$swiperContainer.data('swiperApi', this.swiperApi);\n      this.swiperApi.off('slideChangeTransitionEnd').on('slideChangeTransitionEnd', this.onSliderChangeHandler.bind(this));\n    },\n    trackVisibleProductImpressions: function () {\n      var tmpView,\n          tmpExternalURL = \"\",\n          $tmpElement = []; //.not('.swiper-slide-duplicate')\n\n      this.$el.find('.swiper-slide-visible').each(_.bind(function (pIndex, pItem) {\n        $tmpElement = $(pItem);\n        /**\n         * search original element\n         */\n\n        if ($tmpElement.hasClass('swiper-slide-duplicate')) {\n          tmpExternalURL = $tmpElement.data('external-url');\n          $tmpElement = this.$el.find(\"[data-external-url='\" + tmpExternalURL + \"']\").not('.swiper-slide-duplicate');\n        }\n        /**\n         * get model and track impression\n         */\n\n\n        if (typeof $tmpElement.data('infiniteModel') != 'undefined') {\n          tmpView = $tmpElement.data('infiniteModel').get('view');\n\n          if (tmpView.model.get('disabled') != true && tmpView.model.get('trackImpression') != true) {\n            tmpView.trackImpression();\n          }\n        }\n      }, this));\n    },\n    duplicateElementClick: function () {\n      var $tmpElement = [],\n          tmpExternalURL = \"\",\n          tmpView;\n      this.$el.find('.swiper-slide-duplicate').each(_.bind(function (pIndex, pItem) {\n        $(pItem).unbind('click.enhanced_ecommerce').bind('click.enhanced_ecommerce', _.bind(function (pEvent) {\n          $tmpElement = $(pEvent.currentTarget);\n          tmpExternalURL = $tmpElement.data('external-url');\n          /**\n           * search original element\n           */\n\n          $tmpElement = this.$el.find(\"[data-external-url='\" + tmpExternalURL + \"']\").not('.swiper-slide-duplicate');\n          /**\n           * get model and track impression\n           */\n\n          if (typeof $tmpElement.data('infiniteModel') != 'undefined') {\n            tmpView = $tmpElement.data('infiniteModel').get('view');\n            tmpView.trackProductClick();\n          }\n        }, this));\n      }, this));\n    },\n    onSliderChangeHandler: function (pSwiperApi) {\n      this.trackVisibleProductImpressions();\n    },\n    onEnterHandler: function (pDirection) {\n      BaseInviewView.prototype.onEnterHandler.call(this, pDirection);\n      this.trackVisibleProductImpressions();\n    }\n  });\n  window.EcommerceSliderView = window.EcommerceSliderView || BurdaInfinite.views.products.EcommerceSliderView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (EcommerceSliderView);\n\n//# sourceURL=webpack:///./src/views/products/ecommerce-slider-view.js?");

/***/ }),

/***/ "./src/views/products/look-view.js":
/*!*****************************************!*\
  !*** ./src/views/products/look-view.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.products.LookView = BaseDynamicView.extend({\n    $hotspots: [],\n    blazy: null,\n    trackedProducts: [],\n    initialize: function (pOptions) {\n      BaseDynamicView.prototype.initialize.call(this, pOptions);\n      this.createView();\n      this.init();\n    },\n    createView: function () {\n      this.$hotspots = this.$el.find('.imagepin');\n\n      if (typeof Blazy !== 'undefined') {\n        this.blazy = new Blazy();\n      }\n    },\n    init: function () {\n      var that = this;\n      $.each(this.$hotspots, function () {\n        $(this).on('overlay:show', function (evt, currentPin) {\n          var imagePinId = currentPin.data('imagepin-key');\n          var imagePinData = currentPin.find('.item-ecommerce').data('infiniteModel');\n          var imagePinDataView = imagePinData.get('view');\n          var basicTrackingData = imagePinData.get('enhancedEcommerce');\n          var additionalTrackingData = imagePinDataView.advancedTrackingData;\n\n          if (typeof TrackingManager !== 'undefined') {\n            if (that.trackedProducts.indexOf(imagePinId) === -1) {\n              that.trackedProducts.push(imagePinId);\n              TrackingManager.trackEcommerce(basicTrackingData, 'impressions', additionalTrackingData);\n            }\n          } // Lazyload images\n\n\n          if (that.blazy != null) {\n            var $pinImages = currentPin.find('img');\n            $.each($pinImages, function (index, imageItem) {\n              that.blazy.load(imageItem);\n            });\n          }\n        });\n      });\n    }\n  });\n  window.LookView = window.LookView || BurdaInfinite.views.products.LookView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (LookView);\n\n//# sourceURL=webpack:///./src/views/products/look-view.js?");

/***/ }),

/***/ "./src/views/products/product-look-view.js":
/*!*************************************************!*\
  !*** ./src/views/products/product-look-view.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _product_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./product-view */ \"./src/views/products/product-view.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.products.ProductLookView = _product_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"].extend({\n    initialize: function (pOptions) {\n      _product_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.initialize.call(this, pOptions);\n    },\n    delegateInview: function () {},\n    createModel: function () {\n      _product_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.createModel.call(this);\n      this.model.set('componentType', 'look');\n      this.model.set('variantType', 'look');\n    },\n    collectTrackingData: function () {\n      _product_view__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prototype.collectTrackingData.call(this);\n      this.model.get('enhancedEcommerce').productExtraInformation = this.$el.parent().data('product-variant');\n    }\n  });\n  window.ProductLookView = window.ProductLookView || BurdaInfinite.views.products.ProductLookView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductLookView);\n\n//# sourceURL=webpack:///./src/views/products/product-look-view.js?");

/***/ }),

/***/ "./src/views/products/product-slider-view.js":
/*!***************************************************!*\
  !*** ./src/views/products/product-slider-view.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.products.ProductSliderView = ProductView.extend({\n    ecommerceSliderModel: new Backbone.Model(),\n    $ecommerceSlider: [],\n    initialize: function (pOptions) {\n      if (this.model.has('parentModel') && this.model.get('parentModel').get('type') == 'ecommerceSlider') {\n        this.ecommerceSliderModel = this.model.get('parentModel');\n        this.$ecommerceSlider = this.ecommerceSliderModel.get('el');\n      }\n\n      ProductView.prototype.initialize.call(this, pOptions);\n    },\n    delegateInview: function () {//override inview method\n    },\n    collectTrackingData: function () {\n      ProductView.prototype.collectTrackingData.call(this);\n\n      if (this.ecommerceSliderModel.get('el').data('nid')) {\n        this.model.get('enhancedEcommerce').componentId = this.ecommerceSliderModel.get('el').data('nid').toString();\n      }\n    },\n    setProductIndex: function () {\n      if (this.$ecommerceSlider.length > 0) {\n        var tmpProductIndex = this.$ecommerceSlider.find('.item-ecommerce').not('.swiper-slide-duplicate').index(this.$el);\n        this.model.set('productIndex', tmpProductIndex);\n      }\n    }\n  });\n  window.ProductSliderView = window.ProductSliderView || BurdaInfinite.views.products.ProductSliderView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductSliderView);\n\n//# sourceURL=webpack:///./src/views/products/product-slider-view.js?");

/***/ }),

/***/ "./src/views/products/product-view.js":
/*!********************************************!*\
  !*** ./src/views/products/product-view.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.products.ProductView = BaseView.extend({\n    advancedTrackingData: null,\n    $containerElement: [],\n    inview: null,\n    initialize: function (pOptions) {\n      BaseView.prototype.initialize.call(this, pOptions);\n      this.delegateInview();\n      this.addListener();\n      this.createModel();\n      /**\n       * infiniteBlockDataModel set in base-dynamic-view\n       */\n      // console.log(\">>> this.infiniteBlockDataModel\", this.infiniteBlockDataModel);\n\n      if (this.infiniteBlockDataModel) {\n        if (this.infiniteBlockDataModel.has('trackingContainerType') && this.model.get('componentType') != ProductView.COMPONENT_TYPE_SLIDER) {\n          this.model.set('containerType', this.infiniteBlockDataModel.get('trackingContainerType').toLowerCase());\n        }\n\n        if (this.infiniteBlockDataModel.has('uuid')) {\n          this.advancedTrackingData = TrackingManager.getAdvTrackingByUuid(this.infiniteBlockDataModel.has('uuid'));\n          this.extendDataLayerInfo();\n        }\n\n        if (this.infiniteBlockDataModel.getElement().length > 0) {\n          this.$containerElement = this.infiniteBlockDataModel.getElement();\n          this.setProductIndex(); //set on this position to override the function\n        }\n      }\n\n      if (this.model.get('componentType') == ProductView.COMPONENT_TYPE_SLIDER) {\n        this.model.set('containerType', ProductView.COMPONENT_TYPE_SLIDER);\n      }\n\n      this.initCustomTracking();\n      this.collectTrackingData();\n    },\n    delegateInview: function () {\n      if (this.inview != null) this.inview.destroy();\n      this.inview = this.$el.find('.img-container').inview({\n        offset: 'bottom',\n        enter: _.bind(this.onInviewEnterHandler, this),\n        exit: _.bind(this.onInviewExitHandler, this)\n      });\n    },\n    onInviewEnterHandler: function (pDirection) {\n      this.onEnterHandler(pDirection);\n    },\n    onInviewExitHandler: function (pDirection) {},\n    addListener: function () {\n      this.$el.unbind('click.enhanced_ecommerce').bind('click.enhanced_ecommerce', $.proxy(this.onProductClickHandler, this)); // $(window).scroll(_.bind(this.checkPos, this));\n    },\n    createModel: function () {\n      var tmpComponentType = '';\n      this.model.set('provider', this.$el.data('provider'));\n      this.model.set('price', this.$el.data('price') + '');\n      this.model.set('currency', this.$el.data('currency'));\n      this.model.set('category', this.$el.data('category'));\n      this.model.set('title', this.$el.data('title'));\n      this.model.set('shop', this.$el.data('shop'));\n      this.model.set('productId', this.$el.data('product-id') + '');\n      this.model.set('brand', this.$el.data('brand'));\n      this.model.set('viewType', this.$el.data('view-type'));\n      this.model.set('productCategory', this.$el.data('product-category'));\n      this.model.set('url', this.$el.data('external-url') || this.$el.data('internal-url') || this.$el.data('tipser-url'));\n      this.model.set('soldOut', !!this.$el.data('sold-out'));\n\n      if (this.$el.hasClass('item-product--single')) {\n        tmpComponentType = ProductView.COMPONENT_TYPE_SINGLE;\n      } else if (this.$el.hasClass('item-product-slider')) {\n        tmpComponentType = ProductView.COMPONENT_TYPE_SLIDER;\n      } else {\n        tmpComponentType = ProductView.COMPONENT_TYPE_GRID;\n      }\n\n      this.model.set('componentType', tmpComponentType); //fallback - provider is empty for generic products\n\n      if (this.model.get('provider') == '') {\n        this.model.set('provider', ProductView.PROVIDER_GENERIC);\n      } //generic products has no id\n\n\n      if (this.model.get('productId') == 'undefined') {\n        this.model.set('productId', ProductView.PROVIDER_GENERIC);\n      }\n    },\n    extendDataLayerInfo: function () {\n      if (this.advancedTrackingData.hasOwnProperty('page')) {\n        this.model.set('entityType', this.advancedTrackingData.page.entityType);\n        this.model.set('contentType', this.advancedTrackingData.page.contentType);\n        this.model.set('entityID', this.advancedTrackingData.page.entityID);\n        this.model.set('entityName', this.advancedTrackingData.page.name);\n      }\n    },\n    initCustomTracking: function () {\n      var externalTrackingURL = this.model.get('url');\n      var slicedString = '';\n      var containerType = '';\n      var positionOfLinkParam = externalTrackingURL.indexOf(\"&link\");\n      var hasLinkParam = positionOfLinkParam > -1;\n      var productTitle = '';\n      var productTitleProcessed = '';\n      var isTracdelightURL = externalTrackingURL.indexOf(\"//td.\") > -1;\n      var isDrupalEntityOrNode = this.model.has('entityType');\n      var hasSubid = externalTrackingURL.indexOf(\"subid=\") > -1;\n      if (externalTrackingURL === '' || externalTrackingURL === undefined) return;\n\n      if (this.model.has('containerType') && this.model.get('containerType') !== '') {\n        containerType = '-' + this.model.get('containerType').toLowerCase();\n      }\n\n      switch (this.model.get('provider')) {\n        case ProductView.PROVIDER_TRACDELIGHT:\n          if (hasSubid) {\n            externalTrackingURL = BaseUtils.replaceUrlParam(externalTrackingURL, 'subid', window.getURLParam('subid', externalTrackingURL) + containerType);\n          }\n\n          break;\n\n        case ProductView.PROVIDER_AMAZON:\n          //TODO change this to dynamic value for all platforms\n          if (externalTrackingURL.indexOf(AppConfig.amazonURLTrId) > -1) {\n            slicedString = AppConfig.amazonURLTrId.split('-');\n\n            if (slicedString.length > 1) {\n              slicedString = slicedString[0] + containerType + '-' + slicedString[1];\n            } else {\n              slicedString = AppConfig.amazonURLTrId + containerType;\n            }\n\n            externalTrackingURL = externalTrackingURL.replace(AppConfig.amazonURLTrId, slicedString);\n          }\n\n          break;\n\n        case ProductView.PROVIDER_GENERIC:\n          if (isTracdelightURL && hasLinkParam) {\n            slicedString = externalTrackingURL.substring(positionOfLinkParam, externalTrackingURL.length);\n\n            if (isDrupalEntityOrNode) {\n              productTitle = this.model.get('title');\n              productTitleProcessed = productTitle.replace(/[\\/. ,:-]+/g, \"_\").toLowerCase().slice(0, Math.min(10, productTitle.length));\n              slicedString = \"&subid=\" + this.model.get('entityType') + '-' + this.model.get('entityID') + '-' + productTitleProcessed + containerType;\n            }\n\n            externalTrackingURL = externalTrackingURL.substr(0, positionOfLinkParam) + slicedString + externalTrackingURL.substr(positionOfLinkParam);\n          }\n\n          break;\n      }\n\n      if (externalTrackingURL != this.model.get('url')) {\n        this.model.set('tracking-url', externalTrackingURL);\n        this.$el.attr(\"data-external-url\", externalTrackingURL);\n      }\n    },\n    collectTrackingData: function () {\n      var tmpEnhancedEcommerceData = {\n        list: this.model.get('componentType'),\n        category: this.model.get('shop'),\n        name: this.model.get('title'),\n        id: this.model.get('productId'),\n        price: this.model.get('price'),\n        brand: this.model.get('brand'),\n        provider: this.model.get('provider'),\n        productCategory: this.model.get('productCategory'),\n        containerType: this.model.get('containerType') || '',\n        soldOut: this.model.get('soldOut')\n      };\n\n      if (this.model.has('productIndex')) {\n        tmpEnhancedEcommerceData.position = this.model.get('productIndex');\n      }\n\n      this.model.set('enhancedEcommerce', tmpEnhancedEcommerceData);\n    },\n    setProductIndex: function () {\n      if (this.$containerElement.length > 0) {\n        var tmpProductIndex = this.$containerElement.find('.item-ecommerce').not('.item-product-slider').index(this.$el);\n        this.model.set('productIndex', tmpProductIndex);\n      }\n    },\n    trackImpression: function () {\n      this.model.set('trackImpression', true);\n\n      if (typeof TrackingManager != 'undefined') {\n        TrackingManager.trackEcommerce(this.model.get('enhancedEcommerce'), 'impressions', this.advancedTrackingData);\n      }\n    },\n    trackProductClick: function () {\n      if (typeof TrackingManager != 'undefined') {\n        TrackingManager.trackEcommerce(this.model.get('enhancedEcommerce'), 'productClick', this.advancedTrackingData);\n      }\n    },\n    onProductClickHandler: function (pEvent) {\n      this.trackProductClick();\n    },\n    onEnterHandler: function (pDirection) {\n      // BaseInviewView.prototype.onEnterHandler.call(this, pDirection);\n      this.trackImpression();\n      this.inview.destroy();\n    }\n  }, {\n    PROVIDER_TRACDELIGHT: 'tracdelight',\n    PROVIDER_AMAZON: 'amazon',\n    PROVIDER_GENERIC: 'generic',\n    COMPONENT_TYPE_SLIDER: 'slider',\n    COMPONENT_TYPE_GRID: 'grid',\n    COMPONENT_TYPE_SINGLE: 'single'\n  });\n  window.ProductView = window.ProductView || BurdaInfinite.views.products.ProductView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (ProductView);\n\n//# sourceURL=webpack:///./src/views/products/product-view.js?");

/***/ }),

/***/ "./src/views/sticky-view.js":
/*!**********************************!*\
  !*** ./src/views/sticky-view.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _consts_model_ids__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../consts/model-ids */ \"./src/consts/model-ids.js\");\n\n\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.StickyView = BaseDynamicView.extend({\n    pageOffsetsModel: {},\n    offsetsPageModel: {},\n    $sticky: null,\n    hasAd: false,\n    posTop: 0,\n    offsetTop: 0,\n    height: 0,\n    contentHeight: 0,\n    lastBreakpoint: '',\n    elementBreakpoints: [],\n    initialize: function (pOptions) {\n      BaseDynamicView.prototype.initialize.call(this, pOptions);\n      this.pageOffsetsModel = BM.reuseModel(_consts_model_ids__WEBPACK_IMPORTED_MODULE_0__[\"default\"].pageOffsetsModel);\n      this.offsetsPageModel = this.pageOffsetsModel.getModel('offsetPage');\n      this.offsetTop = this.offsetsPageModel.get('offsets').top;\n      this.posTop = Math.floor(this.$el.offset().top);\n      this.height = Math.floor(this.$el.height());\n      this.elementBreakpoints = $(this.$el.data('breakpoints')).toArray();\n      this.hasAd = this.$el.find('.ad-container').length > 0;\n      /**\n       * default breakpoints\n       */\n\n      if (this.elementBreakpoints.length <= 0) this.elementBreakpoints.push('tablet', 'desktop');\n      this.breakpointDeviceModel = this.deviceModel.getDeviceBreakpoints().findWhere({\n        active: true\n      });\n      this.listenTo(this.deviceModel.getDeviceBreakpoints(), 'change:active', this.onDeviceBreakpointHandler, this);\n      this.listenTo(this.model, 'change:contentHeight', this.onContentHeightHandler, this);\n      this.listenTo(this.offsetsPageModel, 'change:offsets', this.onOffsetHandler, this);\n      this.updateView();\n    },\n    updateView: function () {\n      var tmpCurrentBreakpoint = this.breakpointDeviceModel.id;\n\n      if (this.elementBreakpoints.indexOf(tmpCurrentBreakpoint) >= 0 && this.lastBreakpoint != tmpCurrentBreakpoint) {\n        this.createStickiness();\n      } else if (this.$sticky != null) {\n        this.removeStickiness();\n      }\n\n      this.lastBreakpoint = tmpCurrentBreakpoint;\n    },\n    createStickiness: function () {\n      this.$sticky = this.$el.stick_in_parent({\n        sticky_class: 'stuck',\n        spacer: false,\n        offset_top: this.offsetTop + AppConfig.padding\n      });\n      this.$sticky.on(\"sticky_kit:stick\", $.proxy(function (e) {\n        if (this.$el.parent().outerHeight(true) < this.$el.outerHeight(true)) {\n          this.$el.parent().css('min-height', this.$el.outerHeight(true));\n        }\n      }, this)).on(\"sticky_kit:unstick\", $.proxy(function (e) {\n        if (this.$el.parent().css('min-height') > 1) {\n          this.$el.parent().css('min-height', 1);\n        }\n      }, this));\n    },\n    removeStickiness: function () {\n      if (this.$sticky == null) return;\n      this.$el.trigger(\"sticky_kit:detach\");\n    },\n    refresh: function () {\n      this.$el.trigger(\"sticky_kit:recalc\");\n    },\n    onDeviceBreakpointHandler: function (pModel) {\n      this.breakpointDeviceModel = pModel;\n      this.updateView();\n    },\n    onOffsetHandler: function (pModel) {\n      this.offsetTop = pModel.get('offsets').top;\n      this.$el.trigger(\"sticky_kit:recalc_offset_top\", [this.offsetTop + AppConfig.padding]);\n    },\n    onContentHeightHandler: function (pModel) {\n      this.refresh();\n    }\n  });\n  window.StickyView = window.StickyView || BurdaInfinite.views.StickyView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (StickyView);\n\n//# sourceURL=webpack:///./src/views/sticky-view.js?");

/***/ }),

/***/ "./src/views/teaser-feed-view.js":
/*!***************************************!*\
  !*** ./src/views/teaser-feed-view.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n(function ($, Drupal, drupalSettings, Backbone, BurdaInfinite) {\n  \"use strict\";\n\n  BurdaInfinite.views.TeaserFeedView = BaseView.extend({\n    advancedTrackingData: null,\n    $containerElement: [],\n    inview: null,\n    initialize: function (pOptions) {\n      BaseView.prototype.initialize.call(this, pOptions);\n      this.delegateInview();\n      this.addListener();\n      this.createModel();\n\n      if (this.infiniteBlockDataModel) {\n        if (this.infiniteBlockDataModel.has('trackingContainerType') && typeof ProductView !== 'undefined' && this.model.get('componentType') != ProductView.COMPONENT_TYPE_SLIDER) {\n          this.model.set('containerType', this.infiniteBlockDataModel.get('trackingContainerType').toLowerCase());\n        }\n\n        if (this.infiniteBlockDataModel.has('uuid')) {\n          this.advancedTrackingData = TrackingManager.getAdvTrackingByUuid(this.infiniteBlockDataModel.has('uuid'));\n          this.extendDataLayerInfo();\n        } //if (this.infiniteBlockDataModel.getElement().length > 0) {\n        //    this.$containerElement = this.infiniteBlockDataModel.getElement();\n        //    this.setTeaserIndex(); //set on this position to override the function\n        //}\n\n      }\n\n      this.collectTrackingData();\n    },\n    delegateInview: function () {\n      if (this.inview != null) this.inview.destroy();\n      this.inview = this.$el.find('.teaser__img-container').inview({\n        offset: 'bottom',\n        enter: _.bind(this.onInviewEnterHandler, this),\n        exit: _.bind(this.onInviewExitHandler, this)\n      });\n    },\n    onInviewEnterHandler: function (pDirection) {\n      this.onEnterHandler(pDirection);\n    },\n    onInviewExitHandler: function (pDirection) {},\n    addListener: function () {\n      this.$el.unbind('click.teaser_feed').bind('click.teaser_feed', $.proxy(this.onTeaserClickHandler, this));\n    },\n    createModel: function () {\n      //var tmpURL = this.$el.data('external-url') || this.$el.data('internal-url'),\n      //    $tmpURLElement = [];\n      //\n      //if(!tmpURL) {\n      //    $tmpURLElement = this.$el.find('.teaser__img-container');\n      //    tmpURL = $tmpURLElement.data('external-url') || $tmpURLElement.data('internal-url'));\n      //}\n      this.model.set('nid', this.$el.data('nid'));\n      this.model.set('title', jQuery.trim(this.$el.find('.teaser__title').text())); //this.model.set('url', tmpURL);\n    },\n    extendDataLayerInfo: function () {\n      if (this.advancedTrackingData.hasOwnProperty('page')) {\n        this.model.set('entityType', this.advancedTrackingData.page.entityType);\n        this.model.set('contentType', this.advancedTrackingData.page.contentType);\n        this.model.set('entityID', this.advancedTrackingData.page.entityID);\n        this.model.set('entityName', this.advancedTrackingData.page.name);\n      }\n    },\n    collectTrackingData: function () {\n      var tmpData = {\n        category: 'teaser-feed-ctr',\n        label: this.model.get('title'),\n        elementEntityID: this.model.get('nid')\n      };\n\n      if (this.model.has('productIndex')) {\n        //custom dimension\n        tmpData.pos = this.model.get('productIndex');\n      }\n\n      this.model.set('teaserTracking', tmpData);\n    },\n    //setTeaserIndex: function () {\n    //    if (this.$containerElement.length > 0) {\n    //        var tmpTeaserIndex = this.$containerElement.find('.teaser').index(this.$el);\n    //        this.model.set('productIndex', tmpTeaserIndex);\n    //    }\n    //},\n    trackImpression: function () {\n      if (this.model.get('disabled') == true) return;\n      this.model.set('trackImpression', true);\n\n      if (typeof TrackingManager !== 'undefined' && this.model.get('teaserTracking') !== undefined) {\n        this.model.get('teaserTracking').action = 'impression';\n        this.model.get('teaserTracking').eventNonInteraction = true;\n        TrackingManager.trackEvent(this.model.get('teaserTracking'), this.advancedTrackingData);\n      }\n    },\n    trackTeaserClick: function () {\n      if (typeof TrackingManager != 'undefined') {\n        this.model.get('teaserTracking').action = 'click';\n        this.model.get('teaserTracking').eventNonInteraction = false;\n        TrackingManager.trackEvent(this.model.get('teaserTracking'), this.advancedTrackingData);\n      }\n    },\n    refresh: function () {\n      BaseView.prototype.refresh.call(this);\n      this.addListener();\n      this.createModel();\n      this.collectTrackingData();\n      this.delegateInview();\n    },\n    onTeaserClickHandler: function (pEvent) {\n      this.trackTeaserClick();\n    },\n    onEnterHandler: function (pDirection) {\n      // BaseInviewView.prototype.onEnterHandler.call(this, pDirection);\n      this.trackImpression();\n      this.inview.destroy();\n    }\n  });\n  window.TeaserFeedView = window.TeaserFeedView || BurdaInfinite.views.TeaserFeedView;\n})(jQuery, Drupal, drupalSettings, Backbone, BurdaInfinite);\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (TeaserFeedView);\n\n//# sourceURL=webpack:///./src/views/teaser-feed-view.js?");

/***/ }),

/***/ 0:
/*!****************************!*\
  !*** multi ./src/index.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("module.exports = __webpack_require__(/*! ./src/index.js */\"./src/index.js\");\n\n\n//# sourceURL=webpack:///multi_./src/index.js?");

/***/ })

/******/ });