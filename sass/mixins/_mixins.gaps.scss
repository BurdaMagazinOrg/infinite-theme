/**
** Containers
**/

@mixin reset-container-v-gap($lined: false) {
  @if ($container-v-lined or $lined) {
    border-top: 0;
  }

  padding-top: 0;
  margin-top: 0;
}

//todo merge container-v-margin with container-v-padding to container-v-gap
@mixin container-v-margin($lined: false) {
  @if ($container-v-lined or $lined) {
    border-top: $h-line-style;
  }

  margin-top: $container-margin-top-mobile;

  @media (min-width: $screen-xs-min) and (max-width: $screen-sm-max) {
    margin-top: $container-margin-top-tablet;
  }

  @media (min-width: $screen-md-min) {
    margin-top: $container-margin-top-desktop;
  }
}

@mixin container-v-padding($type: padding, $direction: top) {
  #{$type}-#{$direction}: $container-padding-top-mobile;

  @media (min-width: $screen-xs-min) and (max-width: $screen-sm-max) {
    #{$type}-#{$direction}: $container-padding-top-tablet;
  }

  @media (min-width: $screen-md-min) {
    #{$type}-#{$direction}: $container-padding-top-desktop;
  }
}

/** Lists Gaps **/
@mixin gap--v-sm($gaps: ($gap-v-sm-mobile, $gap-v-sm-tablet, $gap-v-sm-desktop)) {
  @include _gap($gaps);
}

@mixin _gap($gaps) {
  $gap-mobile: nth($gaps, 1);
  $gap-tablet: nth($gaps, 2);
  $gap-desktop: nth($gaps, 3);

  @media (max-width: $screen-xxs-max) {
    margin-top: round($gap-mobile);
    padding-top: round($gap-mobile);
  }

  @media (min-width: $screen-xs-min) and (max-width: $screen-sm-max) {
    margin-top: round($gap-tablet);
    padding-top: round($gap-tablet);
  }

  @media (min-width: $screen-md-min) {
    margin-top: round($gap-desktop);
    padding-top: round($gap-desktop);
  }
}

/**
** Common
**/

@mixin clear-gutter-gap() {
  margin-left: -$grid-gutter-width;
  margin-right: -$grid-gutter-width;
}

@mixin padding-gutter-gap() {
  padding-left: $grid-gutter-width;
  padding-right: $grid-gutter-width;
}